"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[82953],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},g=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),g=c(n),d=r,m=g["".concat(s,".").concat(d)]||g[d]||u[d]||i;return n?a.createElement(m,o(o({ref:t},p),{},{components:n})):a.createElement(m,o({ref:t},p))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=g;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var c=2;c<i;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}g.displayName="MDXCreateElement"},91317:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return u}});var a=n(87462),r=n(63366),i=(n(67294),n(3905)),o=["components"],l={id:"languages_getTextFragmentExtractor",title:"Module: languages/getTextFragmentExtractor",sidebar_label:"languages/getTextFragmentExtractor",sidebar_position:0,custom_edit_url:null},s=void 0,c={unversionedId:"contributing/api/modules/languages_getTextFragmentExtractor",id:"contributing/api/modules/languages_getTextFragmentExtractor",title:"Module: languages/getTextFragmentExtractor",description:"Type aliases",source:"@site/../docs/contributing/api/modules/languages_getTextFragmentExtractor.md",sourceDirName:"contributing/api/modules",slug:"/contributing/api/modules/languages_getTextFragmentExtractor",permalink:"/docs/contributing/api/modules/languages_getTextFragmentExtractor",editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"languages_getTextFragmentExtractor",title:"Module: languages/getTextFragmentExtractor",sidebar_label:"languages/getTextFragmentExtractor",sidebar_position:0,custom_edit_url:null},sidebar:"contributing",previous:{title:"languages/getNodeMatcher",permalink:"/docs/contributing/api/modules/languages_getNodeMatcher"},next:{title:"languages/go",permalink:"/docs/contributing/api/modules/languages_go"}},p={},u=[{value:"Type aliases",id:"type-aliases",level:2},{value:"TextFragmentExtractor",id:"textfragmentextractor",level:3},{value:"Type declaration",id:"type-declaration",level:4},{value:"Parameters",id:"parameters",level:5},{value:"Returns",id:"returns",level:5},{value:"Defined in",id:"defined-in",level:4},{value:"Functions",id:"functions",level:2},{value:"getTextFragmentExtractor",id:"gettextfragmentextractor",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-1",level:4}],g={toc:u};function d(e){var t=e.components,n=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"type-aliases"},"Type aliases"),(0,i.kt)("h3",{id:"textfragmentextractor"},"TextFragmentExtractor"),(0,i.kt)("p",null,"\u01ac ",(0,i.kt)("strong",{parentName:"p"},"TextFragmentExtractor"),": (",(0,i.kt)("inlineCode",{parentName:"p"},"node"),": ",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/interfaces/typings_treeSitter.Parser.SyntaxNode"},(0,i.kt)("inlineCode",{parentName:"a"},"SyntaxNode")),", ",(0,i.kt)("inlineCode",{parentName:"p"},"selection"),": ",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/interfaces/typings_Types.SelectionWithEditor"},(0,i.kt)("inlineCode",{parentName:"a"},"SelectionWithEditor")),") => ",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/classes/actions_BringMoveSwap.internal.Range"},(0,i.kt)("inlineCode",{parentName:"a"},"Range"))," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"null")),(0,i.kt)("h4",{id:"type-declaration"},"Type declaration"),(0,i.kt)("p",null,"\u25b8 (",(0,i.kt)("inlineCode",{parentName:"p"},"node"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"selection"),"): ",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/classes/actions_BringMoveSwap.internal.Range"},(0,i.kt)("inlineCode",{parentName:"a"},"Range"))," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"null")),(0,i.kt)("h5",{id:"parameters"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"node")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/contributing/api/interfaces/typings_treeSitter.Parser.SyntaxNode"},(0,i.kt)("inlineCode",{parentName:"a"},"SyntaxNode")))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"selection")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/contributing/api/interfaces/typings_Types.SelectionWithEditor"},(0,i.kt)("inlineCode",{parentName:"a"},"SelectionWithEditor")))))),(0,i.kt)("h5",{id:"returns"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/classes/actions_BringMoveSwap.internal.Range"},(0,i.kt)("inlineCode",{parentName:"a"},"Range"))," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"null")),(0,i.kt)("h4",{id:"defined-in"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/cursorless-dev/cursorless/blob/ed5840d/src/languages/getTextFragmentExtractor.ts#L16"},"src/languages/getTextFragmentExtractor.ts:16")),(0,i.kt)("h2",{id:"functions"},"Functions"),(0,i.kt)("h3",{id:"gettextfragmentextractor"},"getTextFragmentExtractor"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getTextFragmentExtractor"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"languageId"),"): ",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/modules/languages_getTextFragmentExtractor#textfragmentextractor"},(0,i.kt)("inlineCode",{parentName:"a"},"TextFragmentExtractor"))),(0,i.kt)("p",null,"Returns a function which can be used to extract the range of a text fragment\nfrom within a parsed language. This function should only return a nominal\nrange for fragments within the document that should be treated like raw text,\nsuch as comments strings or error nodes. In these cases we want our\nsurrounding pair algorithm to fall back to a pure raw text-based approach."),(0,i.kt)("h4",{id:"parameters-1"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"languageId")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The language for which to get the text fragment extractor for")))),(0,i.kt)("h4",{id:"returns-1"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/modules/languages_getTextFragmentExtractor#textfragmentextractor"},(0,i.kt)("inlineCode",{parentName:"a"},"TextFragmentExtractor"))),(0,i.kt)("p",null,"The text fragment extractor for the given language"),(0,i.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/cursorless-dev/cursorless/blob/ed5840d/src/languages/getTextFragmentExtractor.ts#L106"},"src/languages/getTextFragmentExtractor.ts:106")))}d.isMDXComponent=!0}}]);