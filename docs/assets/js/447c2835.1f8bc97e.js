"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[21263],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return k}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function d(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),o=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):d(d({},t),e)),n},s=function(e){var t=o(e.components);return a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),m=o(n),k=r,N=m["".concat(p,".").concat(k)]||m[k]||u[k]||i;return n?a.createElement(N,d(d({ref:t},s),{},{components:n})):a.createElement(N,d({ref:t},s))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,d=new Array(i);d[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:r,d[1]=l;for(var o=2;o<i;o++)d[o]=n[o];return a.createElement.apply(null,d)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},16482:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return p},default:function(){return k},frontMatter:function(){return l},metadata:function(){return o},toc:function(){return u}});var a=n(87462),r=n(63366),i=(n(67294),n(3905)),d=["components"],l={id:"util_nodeFinders",title:"Module: util/nodeFinders",sidebar_label:"util/nodeFinders",sidebar_position:0,custom_edit_url:null},p=void 0,o={unversionedId:"contributing/api/modules/util_nodeFinders",id:"contributing/api/modules/util_nodeFinders",title:"Module: util/nodeFinders",description:"Functions",source:"@site/../docs/contributing/api/modules/util_nodeFinders.md",sourceDirName:"contributing/api/modules",slug:"/contributing/api/modules/util_nodeFinders",permalink:"/docs/contributing/api/modules/util_nodeFinders",editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"util_nodeFinders",title:"Module: util/nodeFinders",sidebar_label:"util/nodeFinders",sidebar_position:0,custom_edit_url:null},sidebar:"contributing",previous:{title:"util/map",permalink:"/docs/contributing/api/modules/util_map"},next:{title:"util/nodeMatchers",permalink:"/docs/contributing/api/modules/util_nodeMatchers"}},s={},u=[{value:"Functions",id:"functions",level:2},{value:"ancestorChainNodeFinder",id:"ancestorchainnodefinder",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Parameters",id:"parameters-1",level:5},{value:"Returns",id:"returns-1",level:5},{value:"Defined in",id:"defined-in",level:4},{value:"argumentNodeFinder",id:"argumentnodefinder",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-1",level:4},{value:"chainedNodeFinder",id:"chainednodefinder",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Parameters",id:"parameters-4",level:5},{value:"Returns",id:"returns-4",level:5},{value:"Defined in",id:"defined-in-2",level:4},{value:"findPossiblyWrappedNode",id:"findpossiblywrappednode",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-5",level:4},{value:"Defined in",id:"defined-in-3",level:4},{value:"leadingSiblingNodeFinder",id:"leadingsiblingnodefinder",level:3},{value:"Parameters",id:"parameters-6",level:4},{value:"Returns",id:"returns-6",level:4},{value:"Parameters",id:"parameters-7",level:5},{value:"Returns",id:"returns-7",level:5},{value:"Defined in",id:"defined-in-4",level:4},{value:"nodeFinder",id:"nodefinder",level:3},{value:"Parameters",id:"parameters-8",level:4},{value:"Returns",id:"returns-8",level:4},{value:"Defined in",id:"defined-in-5",level:4},{value:"patternFinder",id:"patternfinder",level:3},{value:"Parameters",id:"parameters-9",level:4},{value:"Returns",id:"returns-9",level:4},{value:"Defined in",id:"defined-in-6",level:4},{value:"typedNodeFinder",id:"typednodefinder",level:3},{value:"Parameters",id:"parameters-10",level:4},{value:"Returns",id:"returns-10",level:4},{value:"Defined in",id:"defined-in-7",level:4}],m={toc:u};function k(e){var t=e.components,n=(0,r.Z)(e,d);return(0,i.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"functions"},"Functions"),(0,i.kt)("h3",{id:"ancestorchainnodefinder"},"ancestorChainNodeFinder"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"ancestorChainNodeFinder"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"nodeToReturn"),", ...",(0,i.kt)("inlineCode",{parentName:"p"},"nodeFinders"),"): (",(0,i.kt)("inlineCode",{parentName:"p"},"node"),": ",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/interfaces/typings_treeSitter.Parser.SyntaxNode"},(0,i.kt)("inlineCode",{parentName:"a"},"SyntaxNode")),") => ",(0,i.kt)("inlineCode",{parentName:"p"},"null")," ","|"," ",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/interfaces/typings_treeSitter.Parser.SyntaxNode"},(0,i.kt)("inlineCode",{parentName:"a"},"SyntaxNode"))),(0,i.kt)("p",null,"Given a sequence of node finders, returns a new node finder which applies\nthem in reverse, walking up the ancestor chain from ",(0,i.kt)("inlineCode",{parentName:"p"},"node"),".\nReturns ",(0,i.kt)("inlineCode",{parentName:"p"},"null")," if any finder in the chain returns null.  For example:"),(0,i.kt)("p",null,'ancestorChainNodeFinder(0, patternFinder("foo", "bar"), patternFinder("bongo"))'),(0,i.kt)("p",null,"is equivalent to:"),(0,i.kt)("p",null,'patternFinder("foo.bongo", "bar.bongo")'),(0,i.kt)("h4",{id:"parameters"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"nodeToReturn")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The index of the node from the sequence to return.  For example, ",(0,i.kt)("inlineCode",{parentName:"td"},"0")," returns the top ancestor in the chain")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"...nodeFinders")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/contributing/api/modules/typings_Types#nodefinder"},(0,i.kt)("inlineCode",{parentName:"a"},"NodeFinder")),"[]"),(0,i.kt)("td",{parentName:"tr",align:"left"},"A list of node finders to apply in sequence")))),(0,i.kt)("h4",{id:"returns"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"fn")),(0,i.kt)("p",null,"A node finder which is a chain of the input node finders"),(0,i.kt)("p",null,"\u25b8 (",(0,i.kt)("inlineCode",{parentName:"p"},"node"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"null")," ","|"," ",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/interfaces/typings_treeSitter.Parser.SyntaxNode"},(0,i.kt)("inlineCode",{parentName:"a"},"SyntaxNode"))),(0,i.kt)("h5",{id:"parameters-1"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"node")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/contributing/api/interfaces/typings_treeSitter.Parser.SyntaxNode"},(0,i.kt)("inlineCode",{parentName:"a"},"SyntaxNode")))))),(0,i.kt)("h5",{id:"returns-1"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"null")," ","|"," ",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/interfaces/typings_treeSitter.Parser.SyntaxNode"},(0,i.kt)("inlineCode",{parentName:"a"},"SyntaxNode"))),(0,i.kt)("h4",{id:"defined-in"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/cursorless-dev/cursorless/blob/d46e900/src/util/nodeFinders.ts#L75"},"src/util/nodeFinders.ts:75")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"argumentnodefinder"},"argumentNodeFinder"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Const")," ",(0,i.kt)("strong",{parentName:"p"},"argumentNodeFinder"),"(...",(0,i.kt)("inlineCode",{parentName:"p"},"parentTypes"),"): ",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/modules/typings_Types#nodefinder"},(0,i.kt)("inlineCode",{parentName:"a"},"NodeFinder"))),(0,i.kt)("h4",{id:"parameters-2"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"...parentTypes")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string"),"[]")))),(0,i.kt)("h4",{id:"returns-2"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/modules/typings_Types#nodefinder"},(0,i.kt)("inlineCode",{parentName:"a"},"NodeFinder"))),(0,i.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/cursorless-dev/cursorless/blob/d46e900/src/util/nodeFinders.ts#L110"},"src/util/nodeFinders.ts:110")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"chainednodefinder"},"chainedNodeFinder"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"chainedNodeFinder"),"(...",(0,i.kt)("inlineCode",{parentName:"p"},"nodeFinders"),"): (",(0,i.kt)("inlineCode",{parentName:"p"},"node"),": ",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/interfaces/typings_treeSitter.Parser.SyntaxNode"},(0,i.kt)("inlineCode",{parentName:"a"},"SyntaxNode")),") => ",(0,i.kt)("inlineCode",{parentName:"p"},"null")," ","|"," ",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/interfaces/typings_treeSitter.Parser.SyntaxNode"},(0,i.kt)("inlineCode",{parentName:"a"},"SyntaxNode"))),(0,i.kt)("p",null,"Given a list of node finders returns a new node finder which applies them in\nsequence returning null if any of the sequence returns null otherwise\nreturning the output of the final node finder"),(0,i.kt)("h4",{id:"parameters-3"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"...nodeFinders")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/contributing/api/modules/typings_Types#nodefinder"},(0,i.kt)("inlineCode",{parentName:"a"},"NodeFinder")),"[]"),(0,i.kt)("td",{parentName:"tr",align:"left"},"A list of node finders to apply in sequence")))),(0,i.kt)("h4",{id:"returns-3"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"fn")),(0,i.kt)("p",null,"A node finder which is a chain of the input node finders"),(0,i.kt)("p",null,"\u25b8 (",(0,i.kt)("inlineCode",{parentName:"p"},"node"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"null")," ","|"," ",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/interfaces/typings_treeSitter.Parser.SyntaxNode"},(0,i.kt)("inlineCode",{parentName:"a"},"SyntaxNode"))),(0,i.kt)("h5",{id:"parameters-4"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"node")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/contributing/api/interfaces/typings_treeSitter.Parser.SyntaxNode"},(0,i.kt)("inlineCode",{parentName:"a"},"SyntaxNode")))))),(0,i.kt)("h5",{id:"returns-4"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"null")," ","|"," ",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/interfaces/typings_treeSitter.Parser.SyntaxNode"},(0,i.kt)("inlineCode",{parentName:"a"},"SyntaxNode"))),(0,i.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/cursorless-dev/cursorless/blob/d46e900/src/util/nodeFinders.ts#L45"},"src/util/nodeFinders.ts:45")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"findpossiblywrappednode"},"findPossiblyWrappedNode"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"findPossiblyWrappedNode"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"isWrapperNode"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"isTargetNode"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"getWrappedNodes"),"): ",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/modules/typings_Types#nodefinder"},(0,i.kt)("inlineCode",{parentName:"a"},"NodeFinder"))),(0,i.kt)("p",null,"Creates a matcher that can match potentially wrapped nodes. For example\ntypescript export statements or python decorators"),(0,i.kt)("h4",{id:"parameters-5"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"isWrapperNode")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/contributing/api/modules/typings_Types#nodefinder"},(0,i.kt)("inlineCode",{parentName:"a"},"NodeFinder"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Returns node if the given node has the right type to be a wrapper node")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"isTargetNode")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/contributing/api/modules/typings_Types#nodefinder"},(0,i.kt)("inlineCode",{parentName:"a"},"NodeFinder"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Returns node if the given node has the right type to be the target")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"getWrappedNodes")),(0,i.kt)("td",{parentName:"tr",align:"left"},"(",(0,i.kt)("inlineCode",{parentName:"td"},"node"),": ",(0,i.kt)("a",{parentName:"td",href:"/docs/contributing/api/interfaces/typings_treeSitter.Parser.SyntaxNode"},(0,i.kt)("inlineCode",{parentName:"a"},"SyntaxNode")),") => (",(0,i.kt)("inlineCode",{parentName:"td"},"null")," ","|"," ",(0,i.kt)("a",{parentName:"td",href:"/docs/contributing/api/interfaces/typings_treeSitter.Parser.SyntaxNode"},(0,i.kt)("inlineCode",{parentName:"a"},"SyntaxNode")),")[]"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Given a wrapper node returns a list of possible target nodes")))),(0,i.kt)("h4",{id:"returns-5"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/modules/typings_Types#nodefinder"},(0,i.kt)("inlineCode",{parentName:"a"},"NodeFinder"))),(0,i.kt)("p",null,"A matcher that will return the given target node or the wrapper\nnode, if it is wrapping a target node"),(0,i.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/cursorless-dev/cursorless/blob/d46e900/src/util/nodeFinders.ts#L170"},"src/util/nodeFinders.ts:170")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"leadingsiblingnodefinder"},"leadingSiblingNodeFinder"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"leadingSiblingNodeFinder"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"nodeFinder"),"): (",(0,i.kt)("inlineCode",{parentName:"p"},"node"),": ",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/interfaces/typings_treeSitter.Parser.SyntaxNode"},(0,i.kt)("inlineCode",{parentName:"a"},"SyntaxNode")),") => ",(0,i.kt)("inlineCode",{parentName:"p"},"null")," ","|"," ",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/interfaces/typings_treeSitter.Parser.SyntaxNode"},(0,i.kt)("inlineCode",{parentName:"a"},"SyntaxNode"))),(0,i.kt)("p",null,"Returns a new node finder which applies ",(0,i.kt)("inlineCode",{parentName:"p"},"nodeFinder")," to the given node and\nthen to each of its previous siblings in turn, returning the first one that\nis non null."),(0,i.kt)("h4",{id:"parameters-6"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"nodeFinder")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/contributing/api/modules/typings_Types#nodefinder"},(0,i.kt)("inlineCode",{parentName:"a"},"NodeFinder"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The node finder to use")))),(0,i.kt)("h4",{id:"returns-6"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"fn")),(0,i.kt)("p",null,"A node finder"),(0,i.kt)("p",null,"\u25b8 (",(0,i.kt)("inlineCode",{parentName:"p"},"node"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"null")," ","|"," ",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/interfaces/typings_treeSitter.Parser.SyntaxNode"},(0,i.kt)("inlineCode",{parentName:"a"},"SyntaxNode"))),(0,i.kt)("h5",{id:"parameters-7"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"node")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/contributing/api/interfaces/typings_treeSitter.Parser.SyntaxNode"},(0,i.kt)("inlineCode",{parentName:"a"},"SyntaxNode")))))),(0,i.kt)("h5",{id:"returns-7"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"null")," ","|"," ",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/interfaces/typings_treeSitter.Parser.SyntaxNode"},(0,i.kt)("inlineCode",{parentName:"a"},"SyntaxNode"))),(0,i.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/cursorless-dev/cursorless/blob/d46e900/src/util/nodeFinders.ts#L20"},"src/util/nodeFinders.ts:20")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"nodefinder"},"nodeFinder"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Const")," ",(0,i.kt)("strong",{parentName:"p"},"nodeFinder"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"isTargetNode"),"): ",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/modules/typings_Types#nodefinder"},(0,i.kt)("inlineCode",{parentName:"a"},"NodeFinder"))),(0,i.kt)("h4",{id:"parameters-8"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"isTargetNode")),(0,i.kt)("td",{parentName:"tr",align:"left"},"(",(0,i.kt)("inlineCode",{parentName:"td"},"node"),": ",(0,i.kt)("a",{parentName:"td",href:"/docs/contributing/api/interfaces/typings_treeSitter.Parser.SyntaxNode"},(0,i.kt)("inlineCode",{parentName:"a"},"SyntaxNode")),") => ",(0,i.kt)("inlineCode",{parentName:"td"},"boolean"))))),(0,i.kt)("h4",{id:"returns-8"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/modules/typings_Types#nodefinder"},(0,i.kt)("inlineCode",{parentName:"a"},"NodeFinder"))),(0,i.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/cursorless-dev/cursorless/blob/d46e900/src/util/nodeFinders.ts#L5"},"src/util/nodeFinders.ts:5")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"patternfinder"},"patternFinder"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"patternFinder"),"(...",(0,i.kt)("inlineCode",{parentName:"p"},"patterns"),"): ",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/modules/typings_Types#nodefinder"},(0,i.kt)("inlineCode",{parentName:"a"},"NodeFinder"))),(0,i.kt)("h4",{id:"parameters-9"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"...patterns")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string"),"[]")))),(0,i.kt)("h4",{id:"returns-9"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/modules/typings_Types#nodefinder"},(0,i.kt)("inlineCode",{parentName:"a"},"NodeFinder"))),(0,i.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/cursorless-dev/cursorless/blob/d46e900/src/util/nodeFinders.ts#L197"},"src/util/nodeFinders.ts:197")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"typednodefinder"},"typedNodeFinder"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Const")," ",(0,i.kt)("strong",{parentName:"p"},"typedNodeFinder"),"(...",(0,i.kt)("inlineCode",{parentName:"p"},"typeNames"),"): ",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/modules/typings_Types#nodefinder"},(0,i.kt)("inlineCode",{parentName:"a"},"NodeFinder"))),(0,i.kt)("h4",{id:"parameters-10"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"...typeNames")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string"),"[]")))),(0,i.kt)("h4",{id:"returns-10"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/modules/typings_Types#nodefinder"},(0,i.kt)("inlineCode",{parentName:"a"},"NodeFinder"))),(0,i.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/cursorless-dev/cursorless/blob/d46e900/src/util/nodeFinders.ts#L104"},"src/util/nodeFinders.ts:104")))}k.isMDXComponent=!0}}]);