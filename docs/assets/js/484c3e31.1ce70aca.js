"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6341],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return f}});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=u(r),f=a,m=d["".concat(s,".").concat(f)]||d[f]||p[f]||i;return r?n.createElement(m,o(o({ref:t},c),{},{components:r})):n.createElement(m,o({ref:t},c))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var u=2;u<i;u++)o[u]=r[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},5532:function(e,t,r){r.r(t),r.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return f},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return p}});var n=r(87462),a=r(63366),i=(r(67294),r(3905)),o=["components"],l={id:"core_inferFullTargets",title:"Module: core/inferFullTargets",sidebar_label:"core/inferFullTargets",sidebar_position:0,custom_edit_url:null},s=void 0,u={unversionedId:"contributing/api/modules/core_inferFullTargets",id:"contributing/api/modules/core_inferFullTargets",title:"Module: core/inferFullTargets",description:"Functions",source:"@site/../docs/contributing/api/modules/core_inferFullTargets.md",sourceDirName:"contributing/api/modules",slug:"/contributing/api/modules/core_inferFullTargets",permalink:"/docs/contributing/api/modules/core_inferFullTargets",editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"core_inferFullTargets",title:"Module: core/inferFullTargets",sidebar_label:"core/inferFullTargets",sidebar_position:0,custom_edit_url:null},sidebar:"contributing",previous:{title:"core/getHatThemeColors",permalink:"/docs/contributing/api/modules/core_getHatThemeColors"},next:{title:"core/shapeAdjustments",permalink:"/docs/contributing/api/modules/core_shapeAdjustments"}},c={},p=[{value:"Functions",id:"functions",level:2},{value:"inferFullTargets",id:"inferfulltargets",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in",level:4}],d={toc:p};function f(e){var t=e.components,r=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"functions"},"Functions"),(0,i.kt)("h3",{id:"inferfulltargets"},"inferFullTargets"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"inferFullTargets"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"targets"),"): ",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/modules/typings_targetDescriptor_types#targetdescriptor"},(0,i.kt)("inlineCode",{parentName:"a"},"TargetDescriptor")),"[]"),(0,i.kt)("p",null,"Performs inference on the partial targets provided by the user, using\nprevious targets, global defaults, and action-specific defaults to fill out\nany details that may have been omitted in the spoken form.\nFor example, we would automatically infer that ",(0,i.kt)("inlineCode",{parentName:"p"},'"take funk air and bat"')," is\nequivalent to ",(0,i.kt)("inlineCode",{parentName:"p"},'"take funk air and funk bat"'),"."),(0,i.kt)("h4",{id:"parameters"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"targets")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/contributing/api/modules/typings_targetDescriptor_types#partialtargetdescriptor"},(0,i.kt)("inlineCode",{parentName:"a"},"PartialTargetDescriptor")),"[]"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The partial targets which need to be completed by inference.")))),(0,i.kt)("h4",{id:"returns"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/modules/typings_targetDescriptor_types#targetdescriptor"},(0,i.kt)("inlineCode",{parentName:"a"},"TargetDescriptor")),"[]"),(0,i.kt)("p",null,"Target objects fully filled out and ready to be processed by ",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/modules/processTargets"},"processTargets"),"."),(0,i.kt)("h4",{id:"defined-in"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/cursorless-dev/cursorless/blob/84c06db/src/core/inferFullTargets.ts#L23"},"src/core/inferFullTargets.ts:23")))}f.isMDXComponent=!0}}]);