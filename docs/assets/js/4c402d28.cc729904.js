"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[57809],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return f}});var i=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=i.createContext({}),l=function(e){var t=i.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=l(e.components);return i.createElement(o.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,o=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),d=l(n),f=r,y=d["".concat(o,".").concat(f)]||d[f]||u[f]||a;return n?i.createElement(y,s(s({ref:t},c),{},{components:n})):i.createElement(y,s({ref:t},c))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,s=new Array(a);s[0]=d;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p.mdxType="string"==typeof e?e:r,s[1]=p;for(var l=2;l<a;l++)s[l]=n[l];return i.createElement.apply(null,s)}return i.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9449:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return o},default:function(){return f},frontMatter:function(){return p},metadata:function(){return l},toc:function(){return u}});var i=n(87462),r=n(63366),a=(n(67294),n(3905)),s=["components"],p={id:"typings_Types.Edit",title:"Interface: Edit",sidebar_label:"Edit",custom_edit_url:null},o=void 0,l={unversionedId:"contributing/api/interfaces/typings_Types.Edit",id:"contributing/api/interfaces/typings_Types.Edit",title:"Interface: Edit",description:"typings/Types.Edit",source:"@site/../docs/contributing/api/interfaces/typings_Types.Edit.md",sourceDirName:"contributing/api/interfaces",slug:"/contributing/api/interfaces/typings_Types.Edit",permalink:"/docs/contributing/api/interfaces/typings_Types.Edit",editUrl:null,tags:[],version:"current",frontMatter:{id:"typings_Types.Edit",title:"Interface: Edit",sidebar_label:"Edit",custom_edit_url:null},sidebar:"contributing",previous:{title:"SuiteConstants",permalink:"/docs/contributing/api/interfaces/test_util_asyncSafety.internal.SuiteConstants"},next:{title:"EditWithRangeUpdater",permalink:"/docs/contributing/api/interfaces/typings_Types.EditWithRangeUpdater"}},c={},u=[{value:"Hierarchy",id:"hierarchy",level:2},{value:"Properties",id:"properties",level:2},{value:"isReplace",id:"isreplace",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"range",id:"range",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"text",id:"text",level:3},{value:"Defined in",id:"defined-in-2",level:4}],d={toc:u};function f(e){var t=e.components,n=(0,r.Z)(e,s);return(0,a.kt)("wrapper",(0,i.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/docs/contributing/api/modules/typings_Types"},"typings/Types"),".Edit"),(0,a.kt)("p",null,"Represent a single edit/change in the document"),(0,a.kt)("h2",{id:"hierarchy"},"Hierarchy"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"Edit"))),(0,a.kt)("p",{parentName:"li"},"\u21b3 ",(0,a.kt)("a",{parentName:"p",href:"/docs/contributing/api/interfaces/typings_Types.EditWithRangeUpdater"},(0,a.kt)("inlineCode",{parentName:"a"},"EditWithRangeUpdater"))))),(0,a.kt)("h2",{id:"properties"},"Properties"),(0,a.kt)("h3",{id:"isreplace"},"isReplace"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,a.kt)("strong",{parentName:"p"},"isReplace"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"boolean")),(0,a.kt)("p",null,"If this edit is an insertion, ie the range has zero length, then this\nfield can be set to ",(0,a.kt)("inlineCode",{parentName:"p"},"true")," to indicate that any adjacent empty selection\nshould ",(0,a.kt)("em",{parentName:"p"},"not")," be shifted to the right, as would normally happen with an\ninsertion. This is equivalent to the\n",(0,a.kt)("a",{parentName:"p",href:"https://code.visualstudio.com/api/references/vscode-api#TextEditorEdit"},"distinction"),"\nin a vscode edit builder between doing a replace with an empty range\nversus doing an insert."),(0,a.kt)("h4",{id:"defined-in"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/cursorless-dev/cursorless/blob/d9fa044/src/typings/Types.ts#L190"},"src/typings/Types.ts:190")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"range"},"range"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"range"),": ",(0,a.kt)("a",{parentName:"p",href:"/docs/contributing/api/classes/actions_BringMoveSwap.internal.Range"},(0,a.kt)("inlineCode",{parentName:"a"},"Range"))),(0,a.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/cursorless-dev/cursorless/blob/d9fa044/src/typings/Types.ts#L178"},"src/typings/Types.ts:178")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"text"},"text"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"text"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"string")),(0,a.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/cursorless-dev/cursorless/blob/d9fa044/src/typings/Types.ts#L179"},"src/typings/Types.ts:179")))}f.isMDXComponent=!0}}]);