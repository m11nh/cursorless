"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[73184],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return k}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var d=a.createContext({}),p=function(e){var t=a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=p(e.components);return a.createElement(d.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,d=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),c=p(n),k=r,u=c["".concat(d,".").concat(k)]||c[k]||m[k]||i;return n?a.createElement(u,l(l({ref:t},s),{},{components:n})):a.createElement(u,l({ref:t},s))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=c;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var p=2;p<i;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},41890:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return d},default:function(){return k},frontMatter:function(){return o},metadata:function(){return p},toc:function(){return m}});var a=n(87462),r=n(63366),i=(n(67294),n(3905)),l=["components"],o={id:"util_nodeSelectors",title:"Module: util/nodeSelectors",sidebar_label:"util/nodeSelectors",sidebar_position:0,custom_edit_url:null},d=void 0,p={unversionedId:"contributing/api/modules/util_nodeSelectors",id:"contributing/api/modules/util_nodeSelectors",title:"Module: util/nodeSelectors",description:"Functions",source:"@site/../docs/contributing/api/modules/util_nodeSelectors.md",sourceDirName:"contributing/api/modules",slug:"/contributing/api/modules/util_nodeSelectors",permalink:"/docs/contributing/api/modules/util_nodeSelectors",editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"util_nodeSelectors",title:"Module: util/nodeSelectors",sidebar_label:"util/nodeSelectors",sidebar_position:0,custom_edit_url:null},sidebar:"contributing",previous:{title:"util/nodeMatchers",permalink:"/docs/contributing/api/modules/util_nodeMatchers"},next:{title:"util/notebook",permalink:"/docs/contributing/api/modules/util_notebook"}},s={},m=[{value:"Functions",id:"functions",level:2},{value:"argumentSelectionExtractor",id:"argumentselectionextractor",level:3},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"childRangeSelector",id:"childrangeselector",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Parameters",id:"parameters-1",level:5},{value:"Returns",id:"returns-2",level:5},{value:"Defined in",id:"defined-in-1",level:4},{value:"delimitedSelector",id:"delimitedselector",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Defined in",id:"defined-in-2",level:4},{value:"delimitersSelector",id:"delimitersselector",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-4",level:4},{value:"Defined in",id:"defined-in-3",level:4},{value:"extendUntilNextMatchingSiblingOrLast",id:"extenduntilnextmatchingsiblingorlast",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-5",level:4},{value:"Defined in",id:"defined-in-4",level:4},{value:"getNodeInternalRange",id:"getnodeinternalrange",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-6",level:4},{value:"Defined in",id:"defined-in-5",level:4},{value:"getNodeRange",id:"getnoderange",level:3},{value:"Parameters",id:"parameters-6",level:4},{value:"Returns",id:"returns-7",level:4},{value:"Defined in",id:"defined-in-6",level:4},{value:"makeNodePairSelection",id:"makenodepairselection",level:3},{value:"Parameters",id:"parameters-7",level:4},{value:"Returns",id:"returns-8",level:4},{value:"Defined in",id:"defined-in-7",level:4},{value:"makeRangeFromPositions",id:"makerangefrompositions",level:3},{value:"Parameters",id:"parameters-8",level:4},{value:"Returns",id:"returns-9",level:4},{value:"Defined in",id:"defined-in-8",level:4},{value:"pairSelectionExtractor",id:"pairselectionextractor",level:3},{value:"Parameters",id:"parameters-9",level:4},{value:"Returns",id:"returns-10",level:4},{value:"Defined in",id:"defined-in-9",level:4},{value:"positionFromPoint",id:"positionfrompoint",level:3},{value:"Parameters",id:"parameters-10",level:4},{value:"Returns",id:"returns-11",level:4},{value:"Defined in",id:"defined-in-10",level:4},{value:"selectWithLeadingDelimiter",id:"selectwithleadingdelimiter",level:3},{value:"Parameters",id:"parameters-11",level:4},{value:"Returns",id:"returns-12",level:4},{value:"Parameters",id:"parameters-12",level:5},{value:"Returns",id:"returns-13",level:5},{value:"Defined in",id:"defined-in-11",level:4},{value:"selectWithTrailingDelimiter",id:"selectwithtrailingdelimiter",level:3},{value:"Parameters",id:"parameters-13",level:4},{value:"Returns",id:"returns-14",level:4},{value:"Parameters",id:"parameters-14",level:5},{value:"Returns",id:"returns-15",level:5},{value:"Defined in",id:"defined-in-12",level:4},{value:"simpleSelectionExtractor",id:"simpleselectionextractor",level:3},{value:"Parameters",id:"parameters-15",level:4},{value:"Returns",id:"returns-16",level:4},{value:"Defined in",id:"defined-in-13",level:4},{value:"unwrapSelectionExtractor",id:"unwrapselectionextractor",level:3},{value:"Parameters",id:"parameters-16",level:4},{value:"Returns",id:"returns-17",level:4},{value:"Defined in",id:"defined-in-14",level:4}],c={toc:m};function k(e){var t=e.components,n=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"functions"},"Functions"),(0,i.kt)("h3",{id:"argumentselectionextractor"},"argumentSelectionExtractor"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"argumentSelectionExtractor"),"(): ",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/modules/typings_Types#selectionextractor"},(0,i.kt)("inlineCode",{parentName:"a"},"SelectionExtractor"))),(0,i.kt)("h4",{id:"returns"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/modules/typings_Types#selectionextractor"},(0,i.kt)("inlineCode",{parentName:"a"},"SelectionExtractor"))),(0,i.kt)("h4",{id:"defined-in"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/cursorless-dev/cursorless/blob/374e4b0/src/util/nodeSelectors.ts#L128"},"src/util/nodeSelectors.ts:128")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"childrangeselector"},"childRangeSelector"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"childRangeSelector"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"typesToExclude?"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"typesToInclude?"),"): (",(0,i.kt)("inlineCode",{parentName:"p"},"editor"),": ",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/interfaces/actions_BringMoveSwap.internal.TextEditor"},(0,i.kt)("inlineCode",{parentName:"a"},"TextEditor")),", ",(0,i.kt)("inlineCode",{parentName:"p"},"node"),": ",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/interfaces/typings_treeSitter.Parser.SyntaxNode"},(0,i.kt)("inlineCode",{parentName:"a"},"SyntaxNode")),") => ",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/interfaces/typings_Types.SelectionWithContext"},(0,i.kt)("inlineCode",{parentName:"a"},"SelectionWithContext"))),(0,i.kt)("p",null,"Creates an extractor that returns a contiguous range between children of a node.\nWhen no arguments are passed, the function will return a range from the first to the last child node. Pass in either inclusions\nIf an inclusion or exclusion list is passed, we return the first range of children such that every child in the range matches the inclusion / exclusion criteria."),(0,i.kt)("h4",{id:"parameters"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"typesToExclude")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string"),"[]"),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"[]")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Ensure these child types are excluded in the contiguous range returned.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"typesToInclude")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string"),"[]"),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"[]")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Ensure these child types are included in the contiguous range returned.")))),(0,i.kt)("h4",{id:"returns-1"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"fn")),(0,i.kt)("p",null,"A selection extractor"),(0,i.kt)("p",null,"\u25b8 (",(0,i.kt)("inlineCode",{parentName:"p"},"editor"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"node"),"): ",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/interfaces/typings_Types.SelectionWithContext"},(0,i.kt)("inlineCode",{parentName:"a"},"SelectionWithContext"))),(0,i.kt)("h5",{id:"parameters-1"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"editor")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/contributing/api/interfaces/actions_BringMoveSwap.internal.TextEditor"},(0,i.kt)("inlineCode",{parentName:"a"},"TextEditor")))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"node")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/contributing/api/interfaces/typings_treeSitter.Parser.SyntaxNode"},(0,i.kt)("inlineCode",{parentName:"a"},"SyntaxNode")))))),(0,i.kt)("h5",{id:"returns-2"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/interfaces/typings_Types.SelectionWithContext"},(0,i.kt)("inlineCode",{parentName:"a"},"SelectionWithContext"))),(0,i.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/cursorless-dev/cursorless/blob/374e4b0/src/util/nodeSelectors.ts#L212"},"src/util/nodeSelectors.ts:212")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"delimitedselector"},"delimitedSelector"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"delimitedSelector"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"isDelimiterNode"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"defaultDelimiter"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"getStartNode?"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"getEndNode?"),"): ",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/modules/typings_Types#selectionextractor"},(0,i.kt)("inlineCode",{parentName:"a"},"SelectionExtractor"))),(0,i.kt)("p",null,"Creates a selector which can be used to automatically clean up after elements\nin a list by removing leading or trailing delimiters"),(0,i.kt)("h4",{id:"parameters-2"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"isDelimiterNode")),(0,i.kt)("td",{parentName:"tr",align:"left"},"(",(0,i.kt)("inlineCode",{parentName:"td"},"node"),": ",(0,i.kt)("a",{parentName:"td",href:"/docs/contributing/api/interfaces/typings_treeSitter.Parser.SyntaxNode"},(0,i.kt)("inlineCode",{parentName:"a"},"SyntaxNode")),") => ",(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"A function used to determine whether a given node is a delimiter node")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"defaultDelimiter")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The default list separator to use if we can't determine it by looking before or after the given node")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"getStartNode")),(0,i.kt)("td",{parentName:"tr",align:"left"},"(",(0,i.kt)("inlineCode",{parentName:"td"},"node"),": ",(0,i.kt)("a",{parentName:"td",href:"/docs/contributing/api/interfaces/typings_treeSitter.Parser.SyntaxNode"},(0,i.kt)("inlineCode",{parentName:"a"},"SyntaxNode")),") => ",(0,i.kt)("a",{parentName:"td",href:"/docs/contributing/api/interfaces/typings_treeSitter.Parser.SyntaxNode"},(0,i.kt)("inlineCode",{parentName:"a"},"SyntaxNode"))),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"identity")),(0,i.kt)("td",{parentName:"tr",align:"left"},"A function to be applied to the node to determine which node is the start node if we really want to expand to a sequence of nodes")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"getEndNode")),(0,i.kt)("td",{parentName:"tr",align:"left"},"(",(0,i.kt)("inlineCode",{parentName:"td"},"node"),": ",(0,i.kt)("a",{parentName:"td",href:"/docs/contributing/api/interfaces/typings_treeSitter.Parser.SyntaxNode"},(0,i.kt)("inlineCode",{parentName:"a"},"SyntaxNode")),") => ",(0,i.kt)("a",{parentName:"td",href:"/docs/contributing/api/interfaces/typings_treeSitter.Parser.SyntaxNode"},(0,i.kt)("inlineCode",{parentName:"a"},"SyntaxNode"))),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"identity")),(0,i.kt)("td",{parentName:"tr",align:"left"},"A function to be applied to the node to determine which node is the end node if we really want to expand to a sequence of nodes")))),(0,i.kt)("h4",{id:"returns-3"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/modules/typings_Types#selectionextractor"},(0,i.kt)("inlineCode",{parentName:"a"},"SelectionExtractor"))),(0,i.kt)("p",null,"A selection extractor"),(0,i.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/cursorless-dev/cursorless/blob/374e4b0/src/util/nodeSelectors.ts#L324"},"src/util/nodeSelectors.ts:324")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"delimitersselector"},"delimitersSelector"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"delimitersSelector"),"(...",(0,i.kt)("inlineCode",{parentName:"p"},"delimiters"),"): ",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/modules/typings_Types#selectionextractor"},(0,i.kt)("inlineCode",{parentName:"a"},"SelectionExtractor"))),(0,i.kt)("h4",{id:"parameters-3"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"...delimiters")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string"),"[]")))),(0,i.kt)("h4",{id:"returns-4"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/modules/typings_Types#selectionextractor"},(0,i.kt)("inlineCode",{parentName:"a"},"SelectionExtractor"))),(0,i.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/cursorless-dev/cursorless/blob/374e4b0/src/util/nodeSelectors.ts#L307"},"src/util/nodeSelectors.ts:307")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"extenduntilnextmatchingsiblingorlast"},"extendUntilNextMatchingSiblingOrLast"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"extendUntilNextMatchingSiblingOrLast"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"editor"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"node"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"nodeFinder"),"): ",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/interfaces/typings_Types.SelectionWithContext"},(0,i.kt)("inlineCode",{parentName:"a"},"SelectionWithContext"))),(0,i.kt)("p",null,"Given a node and a node finder extends the selection from the given node\nuntil just before the next matching sibling node or the final node if no\nsibling matches"),(0,i.kt)("h4",{id:"parameters-4"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"editor")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/contributing/api/interfaces/actions_BringMoveSwap.internal.TextEditor"},(0,i.kt)("inlineCode",{parentName:"a"},"TextEditor"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The text editor containing the given node")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"node")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/contributing/api/interfaces/typings_treeSitter.Parser.SyntaxNode"},(0,i.kt)("inlineCode",{parentName:"a"},"SyntaxNode"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The node from which to extend")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"nodeFinder")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/contributing/api/modules/typings_Types#nodefinder"},(0,i.kt)("inlineCode",{parentName:"a"},"NodeFinder"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The finder to use to determine whether a given node matches")))),(0,i.kt)("h4",{id:"returns-5"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/interfaces/typings_Types.SelectionWithContext"},(0,i.kt)("inlineCode",{parentName:"a"},"SelectionWithContext"))),(0,i.kt)("p",null,"A range from the start node until just before the next matching\nsibling or the final sibling if non matches"),(0,i.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/cursorless-dev/cursorless/blob/374e4b0/src/util/nodeSelectors.ts#L81"},"src/util/nodeSelectors.ts:81")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getnodeinternalrange"},"getNodeInternalRange"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getNodeInternalRange"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"node"),"): ",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/classes/actions_BringMoveSwap.internal.Range"},(0,i.kt)("inlineCode",{parentName:"a"},"Range"))),(0,i.kt)("p",null,"Returns node range excluding the first and last child"),(0,i.kt)("h4",{id:"parameters-5"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"node")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/contributing/api/interfaces/typings_treeSitter.Parser.SyntaxNode"},(0,i.kt)("inlineCode",{parentName:"a"},"SyntaxNode"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The note for which to get the internal range")))),(0,i.kt)("h4",{id:"returns-6"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/classes/actions_BringMoveSwap.internal.Range"},(0,i.kt)("inlineCode",{parentName:"a"},"Range"))),(0,i.kt)("p",null,"The internal range of the given node"),(0,i.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/cursorless-dev/cursorless/blob/374e4b0/src/util/nodeSelectors.ts#L49"},"src/util/nodeSelectors.ts:49")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getnoderange"},"getNodeRange"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getNodeRange"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"node"),"): ",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/classes/actions_BringMoveSwap.internal.Range"},(0,i.kt)("inlineCode",{parentName:"a"},"Range"))),(0,i.kt)("h4",{id:"parameters-6"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"node")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/contributing/api/interfaces/typings_treeSitter.Parser.SyntaxNode"},(0,i.kt)("inlineCode",{parentName:"a"},"SyntaxNode")))))),(0,i.kt)("h4",{id:"returns-7"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/classes/actions_BringMoveSwap.internal.Range"},(0,i.kt)("inlineCode",{parentName:"a"},"Range"))),(0,i.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/cursorless-dev/cursorless/blob/374e4b0/src/util/nodeSelectors.ts#L26"},"src/util/nodeSelectors.ts:26")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"makenodepairselection"},"makeNodePairSelection"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"makeNodePairSelection"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"anchor"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"active"),"): ",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/classes/actions_BringMoveSwap.internal.Selection"},(0,i.kt)("inlineCode",{parentName:"a"},"Selection"))),(0,i.kt)("h4",{id:"parameters-7"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"anchor")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/contributing/api/interfaces/typings_treeSitter.Parser.SyntaxNode"},(0,i.kt)("inlineCode",{parentName:"a"},"SyntaxNode")))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"active")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/contributing/api/interfaces/typings_treeSitter.Parser.SyntaxNode"},(0,i.kt)("inlineCode",{parentName:"a"},"SyntaxNode")))))),(0,i.kt)("h4",{id:"returns-8"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/classes/actions_BringMoveSwap.internal.Selection"},(0,i.kt)("inlineCode",{parentName:"a"},"Selection"))),(0,i.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/cursorless-dev/cursorless/blob/374e4b0/src/util/nodeSelectors.ts#L35"},"src/util/nodeSelectors.ts:35")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"makerangefrompositions"},"makeRangeFromPositions"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"makeRangeFromPositions"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"startPosition"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"endPosition"),"): ",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/classes/actions_BringMoveSwap.internal.Range"},(0,i.kt)("inlineCode",{parentName:"a"},"Range"))),(0,i.kt)("h4",{id:"parameters-8"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"startPosition")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/contributing/api/namespaces/typings_treeSitter.Parser#point"},(0,i.kt)("inlineCode",{parentName:"a"},"Point")))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"endPosition")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/contributing/api/namespaces/typings_treeSitter.Parser#point"},(0,i.kt)("inlineCode",{parentName:"a"},"Point")))))),(0,i.kt)("h4",{id:"returns-9"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/classes/actions_BringMoveSwap.internal.Range"},(0,i.kt)("inlineCode",{parentName:"a"},"Range"))),(0,i.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/cursorless-dev/cursorless/blob/374e4b0/src/util/nodeSelectors.ts#L10"},"src/util/nodeSelectors.ts:10")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"pairselectionextractor"},"pairSelectionExtractor"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"pairSelectionExtractor"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"editor"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"node1"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"node2"),"): ",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/interfaces/typings_Types.SelectionWithContext"},(0,i.kt)("inlineCode",{parentName:"a"},"SelectionWithContext"))),(0,i.kt)("p",null,"Extracts a selection from the first node to the second node.\nBoth nodes are included in the selected nodes"),(0,i.kt)("h4",{id:"parameters-9"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"editor")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/contributing/api/interfaces/actions_BringMoveSwap.internal.TextEditor"},(0,i.kt)("inlineCode",{parentName:"a"},"TextEditor")))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"node1")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/contributing/api/interfaces/typings_treeSitter.Parser.SyntaxNode"},(0,i.kt)("inlineCode",{parentName:"a"},"SyntaxNode")))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"node2")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/contributing/api/interfaces/typings_treeSitter.Parser.SyntaxNode"},(0,i.kt)("inlineCode",{parentName:"a"},"SyntaxNode")))))),(0,i.kt)("h4",{id:"returns-10"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/interfaces/typings_Types.SelectionWithContext"},(0,i.kt)("inlineCode",{parentName:"a"},"SelectionWithContext"))),(0,i.kt)("h4",{id:"defined-in-9"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/cursorless-dev/cursorless/blob/374e4b0/src/util/nodeSelectors.ts#L111"},"src/util/nodeSelectors.ts:111")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"positionfrompoint"},"positionFromPoint"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"positionFromPoint"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"point"),"): ",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/classes/actions_BringMoveSwap.internal.Position"},(0,i.kt)("inlineCode",{parentName:"a"},"Position"))),(0,i.kt)("h4",{id:"parameters-10"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"point")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/contributing/api/namespaces/typings_treeSitter.Parser#point"},(0,i.kt)("inlineCode",{parentName:"a"},"Point")))))),(0,i.kt)("h4",{id:"returns-11"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/classes/actions_BringMoveSwap.internal.Position"},(0,i.kt)("inlineCode",{parentName:"a"},"Position"))),(0,i.kt)("h4",{id:"defined-in-10"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/cursorless-dev/cursorless/blob/374e4b0/src/util/nodeSelectors.ts#L22"},"src/util/nodeSelectors.ts:22")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"selectwithleadingdelimiter"},"selectWithLeadingDelimiter"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"selectWithLeadingDelimiter"),"(...",(0,i.kt)("inlineCode",{parentName:"p"},"delimiters"),"): (",(0,i.kt)("inlineCode",{parentName:"p"},"editor"),": ",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/interfaces/actions_BringMoveSwap.internal.TextEditor"},(0,i.kt)("inlineCode",{parentName:"a"},"TextEditor")),", ",(0,i.kt)("inlineCode",{parentName:"p"},"node"),": ",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/interfaces/typings_treeSitter.Parser.SyntaxNode"},(0,i.kt)("inlineCode",{parentName:"a"},"SyntaxNode")),") => ",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/interfaces/typings_Types.SelectionWithContext"},(0,i.kt)("inlineCode",{parentName:"a"},"SelectionWithContext"))),(0,i.kt)("h4",{id:"parameters-11"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"...delimiters")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string"),"[]")))),(0,i.kt)("h4",{id:"returns-12"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"fn")),(0,i.kt)("p",null,"\u25b8 (",(0,i.kt)("inlineCode",{parentName:"p"},"editor"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"node"),"): ",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/interfaces/typings_Types.SelectionWithContext"},(0,i.kt)("inlineCode",{parentName:"a"},"SelectionWithContext"))),(0,i.kt)("h5",{id:"parameters-12"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"editor")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/contributing/api/interfaces/actions_BringMoveSwap.internal.TextEditor"},(0,i.kt)("inlineCode",{parentName:"a"},"TextEditor")))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"node")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/contributing/api/interfaces/typings_treeSitter.Parser.SyntaxNode"},(0,i.kt)("inlineCode",{parentName:"a"},"SyntaxNode")))))),(0,i.kt)("h5",{id:"returns-13"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/interfaces/typings_Types.SelectionWithContext"},(0,i.kt)("inlineCode",{parentName:"a"},"SelectionWithContext"))),(0,i.kt)("h4",{id:"defined-in-11"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/cursorless-dev/cursorless/blob/374e4b0/src/util/nodeSelectors.ts#L165"},"src/util/nodeSelectors.ts:165")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"selectwithtrailingdelimiter"},"selectWithTrailingDelimiter"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"selectWithTrailingDelimiter"),"(...",(0,i.kt)("inlineCode",{parentName:"p"},"delimiters"),"): (",(0,i.kt)("inlineCode",{parentName:"p"},"editor"),": ",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/interfaces/actions_BringMoveSwap.internal.TextEditor"},(0,i.kt)("inlineCode",{parentName:"a"},"TextEditor")),", ",(0,i.kt)("inlineCode",{parentName:"p"},"node"),": ",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/interfaces/typings_treeSitter.Parser.SyntaxNode"},(0,i.kt)("inlineCode",{parentName:"a"},"SyntaxNode")),") => ",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/interfaces/typings_Types.SelectionWithContext"},(0,i.kt)("inlineCode",{parentName:"a"},"SelectionWithContext"))),(0,i.kt)("h4",{id:"parameters-13"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"...delimiters")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string"),"[]")))),(0,i.kt)("h4",{id:"returns-14"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"fn")),(0,i.kt)("p",null,"\u25b8 (",(0,i.kt)("inlineCode",{parentName:"p"},"editor"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"node"),"): ",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/interfaces/typings_Types.SelectionWithContext"},(0,i.kt)("inlineCode",{parentName:"a"},"SelectionWithContext"))),(0,i.kt)("h5",{id:"parameters-14"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"editor")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/contributing/api/interfaces/actions_BringMoveSwap.internal.TextEditor"},(0,i.kt)("inlineCode",{parentName:"a"},"TextEditor")))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"node")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/contributing/api/interfaces/typings_treeSitter.Parser.SyntaxNode"},(0,i.kt)("inlineCode",{parentName:"a"},"SyntaxNode")))))),(0,i.kt)("h5",{id:"returns-15"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/interfaces/typings_Types.SelectionWithContext"},(0,i.kt)("inlineCode",{parentName:"a"},"SelectionWithContext"))),(0,i.kt)("h4",{id:"defined-in-12"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/cursorless-dev/cursorless/blob/374e4b0/src/util/nodeSelectors.ts#L239"},"src/util/nodeSelectors.ts:239")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"simpleselectionextractor"},"simpleSelectionExtractor"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"simpleSelectionExtractor"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"editor"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"node"),"): ",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/interfaces/typings_Types.SelectionWithContext"},(0,i.kt)("inlineCode",{parentName:"a"},"SelectionWithContext"))),(0,i.kt)("h4",{id:"parameters-15"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"editor")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/contributing/api/interfaces/actions_BringMoveSwap.internal.TextEditor"},(0,i.kt)("inlineCode",{parentName:"a"},"TextEditor")))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"node")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/contributing/api/interfaces/typings_treeSitter.Parser.SyntaxNode"},(0,i.kt)("inlineCode",{parentName:"a"},"SyntaxNode")))))),(0,i.kt)("h4",{id:"returns-16"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/interfaces/typings_Types.SelectionWithContext"},(0,i.kt)("inlineCode",{parentName:"a"},"SelectionWithContext"))),(0,i.kt)("h4",{id:"defined-in-13"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/cursorless-dev/cursorless/blob/374e4b0/src/util/nodeSelectors.ts#L58"},"src/util/nodeSelectors.ts:58")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"unwrapselectionextractor"},"unwrapSelectionExtractor"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"unwrapSelectionExtractor"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"editor"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"node"),"): ",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/interfaces/typings_Types.SelectionWithContext"},(0,i.kt)("inlineCode",{parentName:"a"},"SelectionWithContext"))),(0,i.kt)("h4",{id:"parameters-16"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"editor")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/contributing/api/interfaces/actions_BringMoveSwap.internal.TextEditor"},(0,i.kt)("inlineCode",{parentName:"a"},"TextEditor")))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"node")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/contributing/api/interfaces/typings_treeSitter.Parser.SyntaxNode"},(0,i.kt)("inlineCode",{parentName:"a"},"SyntaxNode")))))),(0,i.kt)("h4",{id:"returns-17"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/interfaces/typings_Types.SelectionWithContext"},(0,i.kt)("inlineCode",{parentName:"a"},"SelectionWithContext"))),(0,i.kt)("h4",{id:"defined-in-14"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/cursorless-dev/cursorless/blob/374e4b0/src/util/nodeSelectors.ts#L144"},"src/util/nodeSelectors.ts:144")))}k.isMDXComponent=!0}}]);