"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[40072],{3905:function(t,e,n){n.d(e,{Zo:function(){return p},kt:function(){return b}});var i=n(67294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function a(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);e&&(i=i.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,i)}return n}function s(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?a(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function u(t,e){if(null==t)return{};var n,i,r=function(t,e){if(null==t)return{};var n,i,r={},a=Object.keys(t);for(i=0;i<a.length;i++)n=a[i],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(i=0;i<a.length;i++)n=a[i],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var o=i.createContext({}),l=function(t){var e=i.useContext(o),n=e;return t&&(n="function"==typeof t?t(e):s(s({},e),t)),n},p=function(t){var e=l(t.components);return i.createElement(o.Provider,{value:e},t.children)},d={inlineCode:"code",wrapper:function(t){var e=t.children;return i.createElement(i.Fragment,{},e)}},c=i.forwardRef((function(t,e){var n=t.components,r=t.mdxType,a=t.originalType,o=t.parentName,p=u(t,["components","mdxType","originalType","parentName"]),c=l(n),b=r,m=c["".concat(o,".").concat(b)]||c[b]||d[b]||a;return n?i.createElement(m,s(s({ref:e},p),{},{components:n})):i.createElement(m,s({ref:e},p))}));function b(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var a=n.length,s=new Array(a);s[0]=c;var u={};for(var o in e)hasOwnProperty.call(e,o)&&(u[o]=e[o]);u.originalType=t,u.mdxType="string"==typeof t?t:r,s[1]=u;for(var l=2;l<a;l++)s[l]=n[l];return i.createElement.apply(null,s)}return i.createElement.apply(null,n)}c.displayName="MDXCreateElement"},85031:function(t,e,n){n.r(e),n.d(e,{assets:function(){return p},contentTitle:function(){return o},default:function(){return b},frontMatter:function(){return u},metadata:function(){return l},toc:function(){return d}});var i=n(87462),r=n(63366),a=(n(67294),n(3905)),s=["components"],u={id:"actions_GenerateSnippet_Substituter.Substituter",title:"Class: Substituter",sidebar_label:"Substituter",custom_edit_url:null},o=void 0,l={unversionedId:"contributing/api/classes/actions_GenerateSnippet_Substituter.Substituter",id:"contributing/api/classes/actions_GenerateSnippet_Substituter.Substituter",title:"Class: Substituter",description:"actions/GenerateSnippet/Substituter.Substituter",source:"@site/../docs/contributing/api/classes/actions_GenerateSnippet_Substituter.Substituter.md",sourceDirName:"contributing/api/classes",slug:"/contributing/api/classes/actions_GenerateSnippet_Substituter.Substituter",permalink:"/docs/contributing/api/classes/actions_GenerateSnippet_Substituter.Substituter",editUrl:null,tags:[],version:"current",frontMatter:{id:"actions_GenerateSnippet_Substituter.Substituter",title:"Class: Substituter",sidebar_label:"Substituter",custom_edit_url:null},sidebar:"contributing",previous:{title:"GenerateSnippet",permalink:"/docs/contributing/api/classes/actions_GenerateSnippet_GenerateSnippet.GenerateSnippet"},next:{title:"GetText",permalink:"/docs/contributing/api/classes/actions_GetText.GetText"}},p={},d=[{value:"Constructors",id:"constructors",level:2},{value:"constructor",id:"constructor",level:3},{value:"Properties",id:"properties",level:2},{value:"substitutions",id:"substitutions",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"Methods",id:"methods",level:2},{value:"addSubstitution",id:"addsubstitution",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in-1",level:4},{value:"makeSubstitutions",id:"makesubstitutions",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-2",level:4}],c={toc:d};function b(t){var e=t.components,n=(0,r.Z)(t,s);return(0,a.kt)("wrapper",(0,i.Z)({},c,n,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/docs/contributing/api/modules/actions_GenerateSnippet_Substituter"},"actions/GenerateSnippet/Substituter"),".Substituter"),(0,a.kt)("p",null,"This class constructs random strings that can be used as placeholders for the\nstrings you'd like to insert into a document. This functionality is useful if\nthe strings you'd like to insert might get modified by something like json\nserialization. You proceed by calling ",(0,a.kt)("a",{parentName:"p",href:"/docs/contributing/api/classes/actions_GenerateSnippet_Substituter.Substituter#addsubstitution"},"addSubstitution"),"  for each string you'd\nlike to put into your document.  This function returns a random id that you\ncan put into your text.  When you are done, call ",(0,a.kt)("a",{parentName:"p",href:"/docs/contributing/api/classes/actions_GenerateSnippet_Substituter.Substituter#makesubstitutions"},"makeSubstitutions"),"\non the final text to replace the random id's with the original strings you\ndesired."),(0,a.kt)("h2",{id:"constructors"},"Constructors"),(0,a.kt)("h3",{id:"constructor"},"constructor"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"new Substituter"),"()"),(0,a.kt)("h2",{id:"properties"},"Properties"),(0,a.kt)("h3",{id:"substitutions"},"substitutions"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,a.kt)("strong",{parentName:"p"},"substitutions"),": ",(0,a.kt)("a",{parentName:"p",href:"/docs/contributing/api/interfaces/actions_GenerateSnippet_Substituter.internal.Substitution"},(0,a.kt)("inlineCode",{parentName:"a"},"Substitution")),"[] = ",(0,a.kt)("inlineCode",{parentName:"p"},"[]")),(0,a.kt)("h4",{id:"defined-in"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/cursorless-dev/cursorless/blob/3419b74/src/actions/GenerateSnippet/Substituter.ts#L18"},"src/actions/GenerateSnippet/Substituter.ts:18")),(0,a.kt)("h2",{id:"methods"},"Methods"),(0,a.kt)("h3",{id:"addsubstitution"},"addSubstitution"),(0,a.kt)("p",null,"\u25b8 ",(0,a.kt)("strong",{parentName:"p"},"addSubstitution"),"(",(0,a.kt)("inlineCode",{parentName:"p"},"to"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"isQuoted?"),"): ",(0,a.kt)("inlineCode",{parentName:"p"},"string")),(0,a.kt)("p",null,"Get a random id that can be put into your text body that will then be\nreplaced by {@link to} when you call ",(0,a.kt)("a",{parentName:"p",href:"/docs/contributing/api/classes/actions_GenerateSnippet_Substituter.Substituter#makesubstitutions"},"makeSubstitutions"),"."),(0,a.kt)("h4",{id:"parameters"},"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"to")),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"string")),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"undefined")),(0,a.kt)("td",{parentName:"tr",align:"left"},"The string that you'd like to end up in the final document after replacements")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"isQuoted")),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"boolean")),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"false")),(0,a.kt)("td",{parentName:"tr",align:"left"},"Use this variable to indicate that in the final text the variable will end up quoted. This occurs if you use the replacement string as a stand alone string in a json document and then you serialize it")))),(0,a.kt)("h4",{id:"returns"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"string")),(0,a.kt)("p",null,"A unique random id that can be put into the document that will\nthen be substituted later"),(0,a.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/cursorless-dev/cursorless/blob/3419b74/src/actions/GenerateSnippet/Substituter.ts#L31"},"src/actions/GenerateSnippet/Substituter.ts:31")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"makesubstitutions"},"makeSubstitutions"),(0,a.kt)("p",null,"\u25b8 ",(0,a.kt)("strong",{parentName:"p"},"makeSubstitutions"),"(",(0,a.kt)("inlineCode",{parentName:"p"},"text"),"): ",(0,a.kt)("inlineCode",{parentName:"p"},"string")),(0,a.kt)("p",null,"Performs substitutions on {@link text}, replacing the random ids generated\nby ",(0,a.kt)("a",{parentName:"p",href:"/docs/contributing/api/classes/actions_GenerateSnippet_Substituter.Substituter#addsubstitution"},"addSubstitution")," with the values passed in for ",(0,a.kt)("inlineCode",{parentName:"p"},"to"),"."),(0,a.kt)("h4",{id:"parameters-1"},"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"text")),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"string")),(0,a.kt)("td",{parentName:"tr",align:"left"},"The text to perform substitutions on")))),(0,a.kt)("h4",{id:"returns-1"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"string")),(0,a.kt)("p",null,"The text with variable substituted for the original values you\ndesired"),(0,a.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/cursorless-dev/cursorless/blob/3419b74/src/actions/GenerateSnippet/Substituter.ts#L50"},"src/actions/GenerateSnippet/Substituter.ts:50")))}b.isMDXComponent=!0}}]);