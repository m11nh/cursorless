"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[89412],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),d=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=d(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),c=d(n),m=r,k=c["".concat(s,".").concat(m)]||c[m]||u[m]||i;return n?a.createElement(k,l(l({ref:t},p),{},{components:n})):a.createElement(k,l({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=c;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var d=2;d<i;d++)l[d]=n[d];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},58395:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return o},metadata:function(){return d},toc:function(){return u}});var a=n(87462),r=n(63366),i=(n(67294),n(3905)),l=["components"],o={id:"core_updateSelections_RangeUpdater.RangeUpdater",title:"Class: RangeUpdater",sidebar_label:"RangeUpdater",custom_edit_url:null},s=void 0,d={unversionedId:"contributing/api/classes/core_updateSelections_RangeUpdater.RangeUpdater",id:"contributing/api/classes/core_updateSelections_RangeUpdater.RangeUpdater",title:"Class: RangeUpdater",description:"core/updateSelections/RangeUpdater.RangeUpdater",source:"@site/../docs/contributing/api/classes/core_updateSelections_RangeUpdater.RangeUpdater.md",sourceDirName:"contributing/api/classes",slug:"/contributing/api/classes/core_updateSelections_RangeUpdater.RangeUpdater",permalink:"/docs/contributing/api/classes/core_updateSelections_RangeUpdater.RangeUpdater",editUrl:null,tags:[],version:"current",frontMatter:{id:"core_updateSelections_RangeUpdater.RangeUpdater",title:"Class: RangeUpdater",sidebar_label:"RangeUpdater",custom_edit_url:null},sidebar:"contributing",previous:{title:"EditStyles",permalink:"/docs/contributing/api/classes/core_editStyles.EditStyles"},next:{title:"NoContainingScopeError",permalink:"/docs/contributing/api/classes/errors.NoContainingScopeError"}},p={},u=[{value:"Constructors",id:"constructors",level:2},{value:"constructor",id:"constructor",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"Properties",id:"properties",level:2},{value:"disposable",id:"disposable",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"rangeInfoLists",id:"rangeinfolists",level:3},{value:"Defined in",id:"defined-in-2",level:4},{value:"replaceEditLists",id:"replaceeditlists",level:3},{value:"Defined in",id:"defined-in-3",level:4},{value:"Methods",id:"methods",level:2},{value:"dispose",id:"dispose",level:3},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in-4",level:4},{value:"documentRangeInfoGenerator",id:"documentrangeinfogenerator",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-5",level:4},{value:"getDocumentRangeInfoLists",id:"getdocumentrangeinfolists",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-6",level:4},{value:"getDocumentReplaceEditLists",id:"getdocumentreplaceeditlists",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Defined in",id:"defined-in-7",level:4},{value:"listenForDocumentChanges",id:"listenfordocumentchanges",level:3},{value:"Returns",id:"returns-4",level:4},{value:"Defined in",id:"defined-in-8",level:4},{value:"registerRangeInfoList",id:"registerrangeinfolist",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-5",level:4},{value:"Returns",id:"returns-6",level:5},{value:"Defined in",id:"defined-in-9",level:4},{value:"registerReplaceEditList",id:"registerreplaceeditlist",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-7",level:4},{value:"Returns",id:"returns-8",level:5},{value:"Defined in",id:"defined-in-10",level:4}],c={toc:u};function m(e){var t=e.components,n=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/modules/core_updateSelections_RangeUpdater"},"core/updateSelections/RangeUpdater"),".RangeUpdater"),(0,i.kt)("h2",{id:"constructors"},"Constructors"),(0,i.kt)("h3",{id:"constructor"},"constructor"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"new RangeUpdater"),"()"),(0,i.kt)("h4",{id:"defined-in"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/cursorless-dev/cursorless/blob/603dbd0/src/core/updateSelections/RangeUpdater.ts#L22"},"src/core/updateSelections/RangeUpdater.ts:22")),(0,i.kt)("h2",{id:"properties"},"Properties"),(0,i.kt)("h3",{id:"disposable"},"disposable"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"disposable"),": ",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/classes/core_Debug.internal.Disposable"},(0,i.kt)("inlineCode",{parentName:"a"},"Disposable"))),(0,i.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/cursorless-dev/cursorless/blob/603dbd0/src/core/updateSelections/RangeUpdater.ts#L20"},"src/core/updateSelections/RangeUpdater.ts:20")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"rangeinfolists"},"rangeInfoLists"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"rangeInfoLists"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"Map"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"string"),", ",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/interfaces/typings_updateSelections.FullRangeInfo"},(0,i.kt)("inlineCode",{parentName:"a"},"FullRangeInfo")),"[][]",">"),(0,i.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/cursorless-dev/cursorless/blob/603dbd0/src/core/updateSelections/RangeUpdater.ts#L18"},"src/core/updateSelections/RangeUpdater.ts:18")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"replaceeditlists"},"replaceEditLists"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"replaceEditLists"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"Map"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"string"),", ",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/interfaces/typings_Types.Edit"},(0,i.kt)("inlineCode",{parentName:"a"},"Edit")),"[][]",">"),(0,i.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/cursorless-dev/cursorless/blob/603dbd0/src/core/updateSelections/RangeUpdater.ts#L19"},"src/core/updateSelections/RangeUpdater.ts:19")),(0,i.kt)("h2",{id:"methods"},"Methods"),(0,i.kt)("h3",{id:"dispose"},"dispose"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"dispose"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"returns"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/cursorless-dev/cursorless/blob/603dbd0/src/core/updateSelections/RangeUpdater.ts#L119"},"src/core/updateSelections/RangeUpdater.ts:119")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"documentrangeinfogenerator"},"documentRangeInfoGenerator"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"documentRangeInfoGenerator"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"document"),"): ",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/interfaces/core_updateSelections_RangeUpdater.internal.Generator"},(0,i.kt)("inlineCode",{parentName:"a"},"Generator")),"<",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/interfaces/typings_updateSelections.FullRangeInfo"},(0,i.kt)("inlineCode",{parentName:"a"},"FullRangeInfo")),", ",(0,i.kt)("inlineCode",{parentName:"p"},"void"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"unknown"),">"),(0,i.kt)("h4",{id:"parameters"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"document")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/contributing/api/interfaces/actions_BringMoveSwap.internal.TextDocument"},(0,i.kt)("inlineCode",{parentName:"a"},"TextDocument")))))),(0,i.kt)("h4",{id:"returns-1"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/interfaces/core_updateSelections_RangeUpdater.internal.Generator"},(0,i.kt)("inlineCode",{parentName:"a"},"Generator")),"<",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/interfaces/typings_updateSelections.FullRangeInfo"},(0,i.kt)("inlineCode",{parentName:"a"},"FullRangeInfo")),", ",(0,i.kt)("inlineCode",{parentName:"p"},"void"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"unknown"),">"),(0,i.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/cursorless-dev/cursorless/blob/603dbd0/src/core/updateSelections/RangeUpdater.ts#L82"},"src/core/updateSelections/RangeUpdater.ts:82")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getdocumentrangeinfolists"},"getDocumentRangeInfoLists"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"getDocumentRangeInfoLists"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"document"),"): ",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/interfaces/typings_updateSelections.FullRangeInfo"},(0,i.kt)("inlineCode",{parentName:"a"},"FullRangeInfo")),"[][]"),(0,i.kt)("h4",{id:"parameters-1"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"document")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/contributing/api/interfaces/actions_BringMoveSwap.internal.TextDocument"},(0,i.kt)("inlineCode",{parentName:"a"},"TextDocument")))))),(0,i.kt)("h4",{id:"returns-2"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/interfaces/typings_updateSelections.FullRangeInfo"},(0,i.kt)("inlineCode",{parentName:"a"},"FullRangeInfo")),"[][]"),(0,i.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/cursorless-dev/cursorless/blob/603dbd0/src/core/updateSelections/RangeUpdater.ts#L26"},"src/core/updateSelections/RangeUpdater.ts:26")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getdocumentreplaceeditlists"},"getDocumentReplaceEditLists"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"getDocumentReplaceEditLists"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"document"),"): ",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/interfaces/typings_Types.Edit"},(0,i.kt)("inlineCode",{parentName:"a"},"Edit")),"[][]"),(0,i.kt)("h4",{id:"parameters-2"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"document")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/contributing/api/interfaces/actions_BringMoveSwap.internal.TextDocument"},(0,i.kt)("inlineCode",{parentName:"a"},"TextDocument")))))),(0,i.kt)("h4",{id:"returns-3"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/interfaces/typings_Types.Edit"},(0,i.kt)("inlineCode",{parentName:"a"},"Edit")),"[][]"),(0,i.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/cursorless-dev/cursorless/blob/603dbd0/src/core/updateSelections/RangeUpdater.ts#L30"},"src/core/updateSelections/RangeUpdater.ts:30")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"listenfordocumentchanges"},"listenForDocumentChanges"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"listenForDocumentChanges"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"returns-4"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/cursorless-dev/cursorless/blob/603dbd0/src/core/updateSelections/RangeUpdater.ts#L92"},"src/core/updateSelections/RangeUpdater.ts:92")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"registerrangeinfolist"},"registerRangeInfoList"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"registerRangeInfoList"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"document"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"rangeInfoList"),"): () => ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Registers a list of range infos to be kept up to date.  It is ok to\nadd to this list after registering it; any items in the list at the time of\na document change will be kept up to date.  Please be sure to call the\nreturned deregister function when you no longer need the ranges\nupdated."),(0,i.kt)("h4",{id:"parameters-3"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"document")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/contributing/api/interfaces/actions_BringMoveSwap.internal.TextDocument"},(0,i.kt)("inlineCode",{parentName:"a"},"TextDocument"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The document containing the ranges")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"rangeInfoList")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/contributing/api/interfaces/typings_updateSelections.FullRangeInfo"},(0,i.kt)("inlineCode",{parentName:"a"},"FullRangeInfo")),"[]"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The ranges to keep up to date; it is ok to add to this list after the fact")))),(0,i.kt)("h4",{id:"returns-5"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"fn")),(0,i.kt)("p",null,"A function that can be used to deregister the list"),(0,i.kt)("p",null,"\u25b8 (): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Registers a list of range infos to be kept up to date.  It is ok to\nadd to this list after registering it; any items in the list at the time of\na document change will be kept up to date.  Please be sure to call the\nreturned deregister function when you no longer need the ranges\nupdated."),(0,i.kt)("h5",{id:"returns-6"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"A function that can be used to deregister the list"),(0,i.kt)("h4",{id:"defined-in-9"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/cursorless-dev/cursorless/blob/603dbd0/src/core/updateSelections/RangeUpdater.ts#L44"},"src/core/updateSelections/RangeUpdater.ts:44")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"registerreplaceeditlist"},"registerReplaceEditList"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"registerReplaceEditList"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"document"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"replaceEditList"),"): () => ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Registers a list of edits to treat as replace edits. These edits are\ninsertions that will not shift an empty selection to the right. Call this\nfunction before applying your edits to the document"),(0,i.kt)("p",null,"Note that if you make two edits at the same location with the same text,\nit is not possible to mark only one of them as replace edit."),(0,i.kt)("p",null,"It is ok to add to this list after registering it; any items in the list\nat the time of a document change will be treated as replace edits.  Please\nbe sure to call the returned deregister function after you have waited for\nyour edits to be applied."),(0,i.kt)("h4",{id:"parameters-4"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"document")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/contributing/api/interfaces/actions_BringMoveSwap.internal.TextDocument"},(0,i.kt)("inlineCode",{parentName:"a"},"TextDocument"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The document containing the ranges")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"replaceEditList")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/contributing/api/interfaces/typings_Types.Edit"},(0,i.kt)("inlineCode",{parentName:"a"},"Edit")),"[]"),(0,i.kt)("td",{parentName:"tr",align:"left"},"A list of edits to treat as replace edits; it is ok to add to this list after the fact")))),(0,i.kt)("h4",{id:"returns-7"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"fn")),(0,i.kt)("p",null,"A function that can be used to deregister the list"),(0,i.kt)("p",null,"\u25b8 (): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Registers a list of edits to treat as replace edits. These edits are\ninsertions that will not shift an empty selection to the right. Call this\nfunction before applying your edits to the document"),(0,i.kt)("p",null,"Note that if you make two edits at the same location with the same text,\nit is not possible to mark only one of them as replace edit."),(0,i.kt)("p",null,"It is ok to add to this list after registering it; any items in the list\nat the time of a document change will be treated as replace edits.  Please\nbe sure to call the returned deregister function after you have waited for\nyour edits to be applied."),(0,i.kt)("h5",{id:"returns-8"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"A function that can be used to deregister the list"),(0,i.kt)("h4",{id:"defined-in-10"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/cursorless-dev/cursorless/blob/603dbd0/src/core/updateSelections/RangeUpdater.ts#L71"},"src/core/updateSelections/RangeUpdater.ts:71")))}m.isMDXComponent=!0}}]);