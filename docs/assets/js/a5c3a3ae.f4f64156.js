"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[29205],{3905:function(e,t,a){a.d(t,{Zo:function(){return d},kt:function(){return c}});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=n.createContext({}),s=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},d=function(e){var t=s(e.components);return n.createElement(o.Provider,{value:t},e.children)},k={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),u=s(a),c=r,m=u["".concat(o,".").concat(c)]||u[c]||k[c]||i;return a?n.createElement(m,l(l({ref:t},d),{},{components:a})):n.createElement(m,l({ref:t},d))}));function c(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=u;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p.mdxType="string"==typeof e?e:r,l[1]=p;for(var s=2;s<i;s++)l[s]=a[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},68007:function(e,t,a){a.r(t),a.d(t,{assets:function(){return d},contentTitle:function(){return o},default:function(){return c},frontMatter:function(){return p},metadata:function(){return s},toc:function(){return k}});var n=a(87462),r=a(63366),i=(a(67294),a(3905)),l=["components"],p={id:"core_HatTokenMap.HatTokenMap",title:"Class: HatTokenMap",sidebar_label:"HatTokenMap",custom_edit_url:null},o=void 0,s={unversionedId:"contributing/api/classes/core_HatTokenMap.HatTokenMap",id:"contributing/api/classes/core_HatTokenMap.HatTokenMap",title:"Class: HatTokenMap",description:"core/HatTokenMap.HatTokenMap",source:"@site/../docs/contributing/api/classes/core_HatTokenMap.HatTokenMap.md",sourceDirName:"contributing/api/classes",slug:"/contributing/api/classes/core_HatTokenMap.HatTokenMap",permalink:"/docs/contributing/api/classes/core_HatTokenMap.HatTokenMap",editUrl:null,tags:[],version:"current",frontMatter:{id:"core_HatTokenMap.HatTokenMap",title:"Class: HatTokenMap",sidebar_label:"HatTokenMap",custom_edit_url:null},sidebar:"contributing",previous:{title:"HatAllocator",permalink:"/docs/contributing/api/classes/core_HatAllocator.HatAllocator"},next:{title:"IndividualHatMap",permalink:"/docs/contributing/api/classes/core_IndividualHatMap.IndividualHatMap"}},d={},k=[{value:"Constructors",id:"constructors",level:2},{value:"constructor",id:"constructor",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"Properties",id:"properties",level:2},{value:"activeMap",id:"activemap",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"hatAllocator",id:"hatallocator",level:3},{value:"Defined in",id:"defined-in-2",level:4},{value:"lastSignalVersion",id:"lastsignalversion",level:3},{value:"Defined in",id:"defined-in-3",level:4},{value:"prePhraseMapSnapshot",id:"prephrasemapsnapshot",level:3},{value:"Defined in",id:"defined-in-4",level:4},{value:"prePhraseMapsSnapshotTimestamp",id:"prephrasemapssnapshottimestamp",level:3},{value:"Defined in",id:"defined-in-5",level:4},{value:"Methods",id:"methods",level:2},{value:"addDecorations",id:"adddecorations",level:3},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in-6",level:4},{value:"dispose",id:"dispose",level:3},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-7",level:4},{value:"getActiveMap",id:"getactivemap",level:3},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-8",level:4},{value:"getReadableMap",id:"getreadablemap",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Defined in",id:"defined-in-9",level:4},{value:"init",id:"init",level:3},{value:"Returns",id:"returns-4",level:4},{value:"Defined in",id:"defined-in-10",level:4},{value:"maybeTakePrePhraseSnapshot",id:"maybetakeprephrasesnapshot",level:3},{value:"Returns",id:"returns-5",level:4},{value:"Defined in",id:"defined-in-11",level:4},{value:"takePrePhraseSnapshot",id:"takeprephrasesnapshot",level:3},{value:"Returns",id:"returns-6",level:4},{value:"Defined in",id:"defined-in-12",level:4},{value:"getKey",id:"getkey",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-7",level:4},{value:"Defined in",id:"defined-in-13",level:4},{value:"splitKey",id:"splitkey",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-8",level:4},{value:"Defined in",id:"defined-in-14",level:4}],u={toc:k};function c(e){var t=e.components,a=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/modules/core_HatTokenMap"},"core/HatTokenMap"),".HatTokenMap"),(0,i.kt)("p",null,"Maps from (hatStyle, character) pairs to tokens"),(0,i.kt)("h2",{id:"constructors"},"Constructors"),(0,i.kt)("h3",{id:"constructor"},"constructor"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"new HatTokenMap"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"graph"),")"),(0,i.kt)("h4",{id:"parameters"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"graph")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/contributing/api/interfaces/typings_Types.Graph"},(0,i.kt)("inlineCode",{parentName:"a"},"Graph")))))),(0,i.kt)("h4",{id:"defined-in"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/cursorless-dev/cursorless/blob/b0837f1/src/core/HatTokenMap.ts#L34"},"src/core/HatTokenMap.ts:34")),(0,i.kt)("h2",{id:"properties"},"Properties"),(0,i.kt)("h3",{id:"activemap"},"activeMap"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"activeMap"),": ",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/classes/core_IndividualHatMap.IndividualHatMap"},(0,i.kt)("inlineCode",{parentName:"a"},"IndividualHatMap"))),(0,i.kt)("p",null,"This is the active map the changes every time we reallocate hats. It is\nliable to change in the middle of a phrase."),(0,i.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/cursorless-dev/cursorless/blob/b0837f1/src/core/HatTokenMap.ts#L21"},"src/core/HatTokenMap.ts:21")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"hatallocator"},"hatAllocator"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"hatAllocator"),": ",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/classes/core_HatAllocator.HatAllocator"},(0,i.kt)("inlineCode",{parentName:"a"},"HatAllocator"))),(0,i.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/cursorless-dev/cursorless/blob/b0837f1/src/core/HatTokenMap.ts#L32"},"src/core/HatTokenMap.ts:32")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"lastsignalversion"},"lastSignalVersion"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"lastSignalVersion"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"null")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"string")," = ",(0,i.kt)("inlineCode",{parentName:"p"},"null")),(0,i.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/cursorless-dev/cursorless/blob/b0837f1/src/core/HatTokenMap.ts#L31"},"src/core/HatTokenMap.ts:31")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"prephrasemapsnapshot"},"prePhraseMapSnapshot"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"prePhraseMapSnapshot"),": ",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/classes/core_IndividualHatMap.IndividualHatMap"},(0,i.kt)("inlineCode",{parentName:"a"},"IndividualHatMap"))),(0,i.kt)("p",null,"This is a snapshot of the hat map that remains stable over the course of a\nphrase. Ranges will be updated to account for changes to the document, but a\nhat with the same color and shape will refer to the same logical range."),(0,i.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/cursorless-dev/cursorless/blob/b0837f1/src/core/HatTokenMap.ts#L28"},"src/core/HatTokenMap.ts:28")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"prephrasemapssnapshottimestamp"},"prePhraseMapsSnapshotTimestamp"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"prePhraseMapsSnapshotTimestamp"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"null")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"bigint")," = ",(0,i.kt)("inlineCode",{parentName:"p"},"null")),(0,i.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/cursorless-dev/cursorless/blob/b0837f1/src/core/HatTokenMap.ts#L29"},"src/core/HatTokenMap.ts:29")),(0,i.kt)("h2",{id:"methods"},"Methods"),(0,i.kt)("h3",{id:"adddecorations"},"addDecorations"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"addDecorations"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("h4",{id:"returns"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/cursorless-dev/cursorless/blob/b0837f1/src/core/HatTokenMap.ts#L49"},"src/core/HatTokenMap.ts:49")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"dispose"},"dispose"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"dispose"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"returns-1"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/cursorless-dev/cursorless/blob/b0837f1/src/core/HatTokenMap.ts#L121"},"src/core/HatTokenMap.ts:121")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getactivemap"},"getActiveMap"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"getActiveMap"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/classes/core_IndividualHatMap.IndividualHatMap"},(0,i.kt)("inlineCode",{parentName:"a"},"IndividualHatMap")),">"),(0,i.kt)("h4",{id:"returns-2"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/classes/core_IndividualHatMap.IndividualHatMap"},(0,i.kt)("inlineCode",{parentName:"a"},"IndividualHatMap")),">"),(0,i.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/cursorless-dev/cursorless/blob/b0837f1/src/core/HatTokenMap.ts#L67"},"src/core/HatTokenMap.ts:67")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getreadablemap"},"getReadableMap"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getReadableMap"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"usePrePhraseSnapshot"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/interfaces/core_IndividualHatMap.ReadOnlyHatMap"},(0,i.kt)("inlineCode",{parentName:"a"},"ReadOnlyHatMap")),">"),(0,i.kt)("p",null,"Returns a transient, read-only hat map for use during the course of a\nsingle command."),(0,i.kt)("p",null,"Please do not hold onto this copy beyond the lifetime of a single command,\nbecause it will get stale."),(0,i.kt)("h4",{id:"parameters-1"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"usePrePhraseSnapshot")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Whether to use pre-phrase snapshot")))),(0,i.kt)("h4",{id:"returns-3"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/interfaces/core_IndividualHatMap.ReadOnlyHatMap"},(0,i.kt)("inlineCode",{parentName:"a"},"ReadOnlyHatMap")),">"),(0,i.kt)("p",null,"A readable snapshot of the map"),(0,i.kt)("h4",{id:"defined-in-9"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/cursorless-dev/cursorless/blob/b0837f1/src/core/HatTokenMap.ts#L84"},"src/core/HatTokenMap.ts:84")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"init"},"init"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"init"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("h4",{id:"returns-4"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("h4",{id:"defined-in-10"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/cursorless-dev/cursorless/blob/b0837f1/src/core/HatTokenMap.ts#L45"},"src/core/HatTokenMap.ts:45")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"maybetakeprephrasesnapshot"},"maybeTakePrePhraseSnapshot"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"maybeTakePrePhraseSnapshot"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("h4",{id:"returns-5"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("h4",{id:"defined-in-11"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/cursorless-dev/cursorless/blob/b0837f1/src/core/HatTokenMap.ts#L129"},"src/core/HatTokenMap.ts:129")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"takeprephrasesnapshot"},"takePrePhraseSnapshot"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"takePrePhraseSnapshot"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"returns-6"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-12"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/cursorless-dev/cursorless/blob/b0837f1/src/core/HatTokenMap.ts#L146"},"src/core/HatTokenMap.ts:146")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getkey"},"getKey"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("strong",{parentName:"p"},"getKey"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"hatStyle"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"character"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"string")),(0,i.kt)("h4",{id:"parameters-2"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"hatStyle")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/contributing/api/modules/core_constants#hatstylename"},(0,i.kt)("inlineCode",{parentName:"a"},"HatStyleName")))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"character")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string"))))),(0,i.kt)("h4",{id:"returns-7"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"string")),(0,i.kt)("h4",{id:"defined-in-13"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/cursorless-dev/cursorless/blob/b0837f1/src/core/HatTokenMap.ts#L53"},"src/core/HatTokenMap.ts:53")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"splitkey"},"splitKey"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("strong",{parentName:"p"},"splitKey"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"key"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Object")),(0,i.kt)("h4",{id:"parameters-3"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"key")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string"))))),(0,i.kt)("h4",{id:"returns-8"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Object")),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"character")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"hatStyle")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/contributing/api/modules/core_constants#hatstylename"},(0,i.kt)("inlineCode",{parentName:"a"},"HatStyleName")))))),(0,i.kt)("h4",{id:"defined-in-14"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/cursorless-dev/cursorless/blob/b0837f1/src/core/HatTokenMap.ts#L57"},"src/core/HatTokenMap.ts:57")))}c.isMDXComponent=!0}}]);