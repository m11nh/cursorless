"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[95579],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return u}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),o=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=o(e.components);return a.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,s=d(e,["components","mdxType","originalType","parentName"]),c=o(n),u=r,k=c["".concat(p,".").concat(u)]||c[u]||m[u]||i;return n?a.createElement(k,l(l({ref:t},s),{},{components:n})):a.createElement(k,l({ref:t},s))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=c;var d={};for(var p in t)hasOwnProperty.call(t,p)&&(d[p]=t[p]);d.originalType=e,d.mdxType="string"==typeof e?e:r,l[1]=d;for(var o=2;o<i;o++)l[o]=n[o];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},90613:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return p},default:function(){return u},frontMatter:function(){return d},metadata:function(){return o},toc:function(){return m}});var a=n(87462),r=n(63366),i=(n(67294),n(3905)),l=["components"],d={id:"util_nodeMatchers",title:"Module: util/nodeMatchers",sidebar_label:"util/nodeMatchers",sidebar_position:0,custom_edit_url:null},p=void 0,o={unversionedId:"contributing/api/modules/util_nodeMatchers",id:"contributing/api/modules/util_nodeMatchers",title:"Module: util/nodeMatchers",description:"Functions",source:"@site/../docs/contributing/api/modules/util_nodeMatchers.md",sourceDirName:"contributing/api/modules",slug:"/contributing/api/modules/util_nodeMatchers",permalink:"/docs/contributing/api/modules/util_nodeMatchers",editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"util_nodeMatchers",title:"Module: util/nodeMatchers",sidebar_label:"util/nodeMatchers",sidebar_position:0,custom_edit_url:null},sidebar:"contributing",previous:{title:"util/nodeFinders",permalink:"/docs/contributing/api/modules/util_nodeFinders"},next:{title:"util/nodeSelectors",permalink:"/docs/contributing/api/modules/util_nodeSelectors"}},s={},m=[{value:"Functions",id:"functions",level:2},{value:"ancestorChainNodeMatcher",id:"ancestorchainnodematcher",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"argumentMatcher",id:"argumentmatcher",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-1",level:4},{value:"cascadingMatcher",id:"cascadingmatcher",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-2",level:4},{value:"chainedMatcher",id:"chainedmatcher",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Defined in",id:"defined-in-3",level:4},{value:"conditionMatcher",id:"conditionmatcher",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-4",level:4},{value:"Defined in",id:"defined-in-4",level:4},{value:"createPatternMatchers",id:"createpatternmatchers",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-5",level:4},{value:"Defined in",id:"defined-in-5",level:4},{value:"leadingMatcher",id:"leadingmatcher",level:3},{value:"Parameters",id:"parameters-6",level:4},{value:"Returns",id:"returns-6",level:4},{value:"Defined in",id:"defined-in-6",level:4},{value:"matcher",id:"matcher",level:3},{value:"Parameters",id:"parameters-7",level:4},{value:"Returns",id:"returns-7",level:4},{value:"Defined in",id:"defined-in-7",level:4},{value:"notSupported",id:"notsupported",level:3},{value:"Parameters",id:"parameters-8",level:4},{value:"Returns",id:"returns-8",level:4},{value:"Defined in",id:"defined-in-8",level:4},{value:"patternMatcher",id:"patternmatcher",level:3},{value:"Parameters",id:"parameters-9",level:4},{value:"Returns",id:"returns-9",level:4},{value:"Defined in",id:"defined-in-9",level:4},{value:"trailingMatcher",id:"trailingmatcher",level:3},{value:"Parameters",id:"parameters-10",level:4},{value:"Returns",id:"returns-10",level:4},{value:"Defined in",id:"defined-in-10",level:4},{value:"typeMatcher",id:"typematcher",level:3},{value:"Parameters",id:"parameters-11",level:4},{value:"Returns",id:"returns-11",level:4},{value:"Defined in",id:"defined-in-11",level:4}],c={toc:m};function u(e){var t=e.components,n=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"functions"},"Functions"),(0,i.kt)("h3",{id:"ancestorchainnodematcher"},"ancestorChainNodeMatcher"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"ancestorChainNodeMatcher"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"nodeFinders"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"nodeToReturn?"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"selector?"),"): ",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/modules/typings_Types#nodematcher"},(0,i.kt)("inlineCode",{parentName:"a"},"NodeMatcher"))),(0,i.kt)("p",null,"Given a sequence of node finders, returns a new node matcher which applies\nthem in reverse, walking up the ancestor chain from ",(0,i.kt)("inlineCode",{parentName:"p"},"node"),".\nReturns ",(0,i.kt)("inlineCode",{parentName:"p"},"null")," if any finder in the chain returns null.  For example:"),(0,i.kt)("p",null,'ancestorChainNodeFinder(0, patternFinder("foo", "bar"), patternFinder("bongo"))'),(0,i.kt)("p",null,"is equivalent to:"),(0,i.kt)("p",null,'patternFinder("foo.bongo", "bar.bongo")'),(0,i.kt)("h4",{id:"parameters"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"nodeFinders")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/contributing/api/modules/typings_Types#nodefinder"},(0,i.kt)("inlineCode",{parentName:"a"},"NodeFinder")),"[]"),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"A list of node finders to apply in sequence")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"nodeToReturn")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"0")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The index of the node from the sequence to return.  For example, ",(0,i.kt)("inlineCode",{parentName:"td"},"0")," returns the top ancestor in the chain")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"selector")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/contributing/api/modules/typings_Types#selectionextractor"},(0,i.kt)("inlineCode",{parentName:"a"},"SelectionExtractor"))),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"simpleSelectionExtractor")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The selector to apply to the final node")))),(0,i.kt)("h4",{id:"returns"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/modules/typings_Types#nodematcher"},(0,i.kt)("inlineCode",{parentName:"a"},"NodeMatcher"))),(0,i.kt)("p",null,"A node finder which is a chain of the input node finders"),(0,i.kt)("h4",{id:"defined-in"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/cursorless-dev/cursorless/blob/374e4b0/src/util/nodeMatchers.ts#L89"},"src/util/nodeMatchers.ts:89")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"argumentmatcher"},"argumentMatcher"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"argumentMatcher"),"(...",(0,i.kt)("inlineCode",{parentName:"p"},"parentTypes"),"): ",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/modules/typings_Types#nodematcher"},(0,i.kt)("inlineCode",{parentName:"a"},"NodeMatcher"))),(0,i.kt)("h4",{id:"parameters-1"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"...parentTypes")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string"),"[]")))),(0,i.kt)("h4",{id:"returns-1"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/modules/typings_Types#nodematcher"},(0,i.kt)("inlineCode",{parentName:"a"},"NodeMatcher"))),(0,i.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/cursorless-dev/cursorless/blob/374e4b0/src/util/nodeMatchers.ts#L108"},"src/util/nodeMatchers.ts:108")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"cascadingmatcher"},"cascadingMatcher"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"cascadingMatcher"),"(...",(0,i.kt)("inlineCode",{parentName:"p"},"matchers"),"): ",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/modules/typings_Types#nodematcher"},(0,i.kt)("inlineCode",{parentName:"a"},"NodeMatcher"))),(0,i.kt)("p",null,"Create a new matcher that will try the given matchers in sequence until one\nreturns non-null"),(0,i.kt)("h4",{id:"parameters-2"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"...matchers")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/contributing/api/modules/typings_Types#nodematcher"},(0,i.kt)("inlineCode",{parentName:"a"},"NodeMatcher")),"[]"),(0,i.kt)("td",{parentName:"tr",align:"left"},"A list of matchers to try in sequence until one doesn't return null")))),(0,i.kt)("h4",{id:"returns-2"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/modules/typings_Types#nodematcher"},(0,i.kt)("inlineCode",{parentName:"a"},"NodeMatcher"))),(0,i.kt)("p",null,"A NodeMatcher that tries the given matchers in sequence"),(0,i.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/cursorless-dev/cursorless/blob/374e4b0/src/util/nodeMatchers.ts#L158"},"src/util/nodeMatchers.ts:158")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"chainedmatcher"},"chainedMatcher"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"chainedMatcher"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"finders"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"selector?"),"): ",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/modules/typings_Types#nodematcher"},(0,i.kt)("inlineCode",{parentName:"a"},"NodeMatcher"))),(0,i.kt)("p",null,"Given a list of node finders returns a matcher which applies them in\nsequence returning null if any of the sequence returns null otherwise\nreturning the output of the final node finder"),(0,i.kt)("h4",{id:"parameters-3"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"finders")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/contributing/api/modules/typings_Types#nodefinder"},(0,i.kt)("inlineCode",{parentName:"a"},"NodeFinder")),"[]"),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"-")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"selector")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/contributing/api/modules/typings_Types#selectionextractor"},(0,i.kt)("inlineCode",{parentName:"a"},"SelectionExtractor"))),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"simpleSelectionExtractor")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The selector to apply to the final node")))),(0,i.kt)("h4",{id:"returns-3"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/modules/typings_Types#nodematcher"},(0,i.kt)("inlineCode",{parentName:"a"},"NodeMatcher"))),(0,i.kt)("p",null,"A matcher which is a chain of the input node finders"),(0,i.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/cursorless-dev/cursorless/blob/374e4b0/src/util/nodeMatchers.ts#L50"},"src/util/nodeMatchers.ts:50")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"conditionmatcher"},"conditionMatcher"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"conditionMatcher"),"(...",(0,i.kt)("inlineCode",{parentName:"p"},"patterns"),"): ",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/modules/typings_Types#nodematcher"},(0,i.kt)("inlineCode",{parentName:"a"},"NodeMatcher"))),(0,i.kt)("h4",{id:"parameters-4"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"...patterns")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string"),"[]")))),(0,i.kt)("h4",{id:"returns-4"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/modules/typings_Types#nodematcher"},(0,i.kt)("inlineCode",{parentName:"a"},"NodeMatcher"))),(0,i.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/cursorless-dev/cursorless/blob/374e4b0/src/util/nodeMatchers.ts#L115"},"src/util/nodeMatchers.ts:115")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"createpatternmatchers"},"createPatternMatchers"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"createPatternMatchers"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"nodeMatchers"),"): ",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/namespaces/actions_InsertSnippet.internal#record"},(0,i.kt)("inlineCode",{parentName:"a"},"Record")),"<",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/modules/typings_targetDescriptor_types#simplescopetypetype"},(0,i.kt)("inlineCode",{parentName:"a"},"SimpleScopeTypeType")),", ",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/modules/typings_Types#nodematcher"},(0,i.kt)("inlineCode",{parentName:"a"},"NodeMatcher")),">"),(0,i.kt)("h4",{id:"parameters-5"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"nodeMatchers")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/contributing/api/namespaces/util_graphFactories.internal#partial"},(0,i.kt)("inlineCode",{parentName:"a"},"Partial")),"<",(0,i.kt)("a",{parentName:"td",href:"/docs/contributing/api/namespaces/actions_InsertSnippet.internal#record"},(0,i.kt)("inlineCode",{parentName:"a"},"Record")),"<",(0,i.kt)("a",{parentName:"td",href:"/docs/contributing/api/modules/typings_targetDescriptor_types#simplescopetypetype"},(0,i.kt)("inlineCode",{parentName:"a"},"SimpleScopeTypeType")),", ",(0,i.kt)("a",{parentName:"td",href:"/docs/contributing/api/modules/typings_Types#nodematcheralternative"},(0,i.kt)("inlineCode",{parentName:"a"},"NodeMatcherAlternative")),">",">")))),(0,i.kt)("h4",{id:"returns-5"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/namespaces/actions_InsertSnippet.internal#record"},(0,i.kt)("inlineCode",{parentName:"a"},"Record")),"<",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/modules/typings_targetDescriptor_types#simplescopetypetype"},(0,i.kt)("inlineCode",{parentName:"a"},"SimpleScopeTypeType")),", ",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/modules/typings_Types#nodematcher"},(0,i.kt)("inlineCode",{parentName:"a"},"NodeMatcher")),">"),(0,i.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/cursorless-dev/cursorless/blob/374e4b0/src/util/nodeMatchers.ts#L178"},"src/util/nodeMatchers.ts:178")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"leadingmatcher"},"leadingMatcher"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"leadingMatcher"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"patterns"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"delimiters?"),"): ",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/modules/typings_Types#nodematcher"},(0,i.kt)("inlineCode",{parentName:"a"},"NodeMatcher"))),(0,i.kt)("p",null,"Given ",(0,i.kt)("inlineCode",{parentName:"p"},"patterns"),", creates a node matcher that will add leading delimiter to\nremoval range."),(0,i.kt)("h4",{id:"parameters-6"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"patterns")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string"),"[]"),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Patterns for pattern finder")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"delimiters")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string"),"[]"),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"[]")),(0,i.kt)("td",{parentName:"tr",align:"left"},"-")))),(0,i.kt)("h4",{id:"returns-6"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/modules/typings_Types#nodematcher"},(0,i.kt)("inlineCode",{parentName:"a"},"NodeMatcher"))),(0,i.kt)("p",null,"A node matcher"),(0,i.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/cursorless-dev/cursorless/blob/374e4b0/src/util/nodeMatchers.ts#L125"},"src/util/nodeMatchers.ts:125")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"matcher"},"matcher"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"matcher"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"finder"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"selector?"),"): ",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/modules/typings_Types#nodematcher"},(0,i.kt)("inlineCode",{parentName:"a"},"NodeMatcher"))),(0,i.kt)("h4",{id:"parameters-7"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default value"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"finder")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/contributing/api/modules/typings_Types#nodefinder"},(0,i.kt)("inlineCode",{parentName:"a"},"NodeFinder"))),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"selector")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/contributing/api/modules/typings_Types#selectionextractor"},(0,i.kt)("inlineCode",{parentName:"a"},"SelectionExtractor"))),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"simpleSelectionExtractor"))))),(0,i.kt)("h4",{id:"returns-7"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/modules/typings_Types#nodematcher"},(0,i.kt)("inlineCode",{parentName:"a"},"NodeMatcher"))),(0,i.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/cursorless-dev/cursorless/blob/374e4b0/src/util/nodeMatchers.ts#L25"},"src/util/nodeMatchers.ts:25")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"notsupported"},"notSupported"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Const")," ",(0,i.kt)("strong",{parentName:"p"},"notSupported"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"selection"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"node"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"null")," ","|"," ",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/modules/typings_Types#nodematchervalue"},(0,i.kt)("inlineCode",{parentName:"a"},"NodeMatcherValue")),"[]"),(0,i.kt)("h4",{id:"parameters-8"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"selection")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/contributing/api/interfaces/typings_Types.SelectionWithEditor"},(0,i.kt)("inlineCode",{parentName:"a"},"SelectionWithEditor")))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"node")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/contributing/api/interfaces/typings_treeSitter.Parser.SyntaxNode"},(0,i.kt)("inlineCode",{parentName:"a"},"SyntaxNode")))))),(0,i.kt)("h4",{id:"returns-8"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"null")," ","|"," ",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/modules/typings_Types#nodematchervalue"},(0,i.kt)("inlineCode",{parentName:"a"},"NodeMatcherValue")),"[]"),(0,i.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/cursorless-dev/cursorless/blob/374e4b0/src/util/nodeMatchers.ts#L171"},"src/util/nodeMatchers.ts:171")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"patternmatcher"},"patternMatcher"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"patternMatcher"),"(...",(0,i.kt)("inlineCode",{parentName:"p"},"patterns"),"): ",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/modules/typings_Types#nodematcher"},(0,i.kt)("inlineCode",{parentName:"a"},"NodeMatcher"))),(0,i.kt)("h4",{id:"parameters-9"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"...patterns")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string"),"[]")))),(0,i.kt)("h4",{id:"returns-9"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/modules/typings_Types#nodematcher"},(0,i.kt)("inlineCode",{parentName:"a"},"NodeMatcher"))),(0,i.kt)("h4",{id:"defined-in-9"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/cursorless-dev/cursorless/blob/374e4b0/src/util/nodeMatchers.ts#L104"},"src/util/nodeMatchers.ts:104")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"trailingmatcher"},"trailingMatcher"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"trailingMatcher"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"patterns"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"delimiters?"),"): ",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/modules/typings_Types#nodematcher"},(0,i.kt)("inlineCode",{parentName:"a"},"NodeMatcher"))),(0,i.kt)("p",null,"Given ",(0,i.kt)("inlineCode",{parentName:"p"},"patterns"),", creates a node matcher that will add trailing delimiter to\nremoval range."),(0,i.kt)("h4",{id:"parameters-10"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"patterns")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string"),"[]"),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Patterns for pattern finder")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"delimiters")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string"),"[]"),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"[]")),(0,i.kt)("td",{parentName:"tr",align:"left"},"-")))),(0,i.kt)("h4",{id:"returns-10"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/modules/typings_Types#nodematcher"},(0,i.kt)("inlineCode",{parentName:"a"},"NodeMatcher"))),(0,i.kt)("p",null,"A node matcher"),(0,i.kt)("h4",{id:"defined-in-10"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/cursorless-dev/cursorless/blob/374e4b0/src/util/nodeMatchers.ts#L141"},"src/util/nodeMatchers.ts:141")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"typematcher"},"typeMatcher"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"typeMatcher"),"(...",(0,i.kt)("inlineCode",{parentName:"p"},"typeNames"),"): ",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/modules/typings_Types#nodematcher"},(0,i.kt)("inlineCode",{parentName:"a"},"NodeMatcher"))),(0,i.kt)("h4",{id:"parameters-11"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"...typeNames")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string"),"[]")))),(0,i.kt)("h4",{id:"returns-11"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/modules/typings_Types#nodematcher"},(0,i.kt)("inlineCode",{parentName:"a"},"NodeMatcher"))),(0,i.kt)("h4",{id:"defined-in-11"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/cursorless-dev/cursorless/blob/374e4b0/src/util/nodeMatchers.ts#L100"},"src/util/nodeMatchers.ts:100")))}u.isMDXComponent=!0}}]);