"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[94354],{3905:function(e,t,n){n.d(t,{Zo:function(){return m},kt:function(){return g}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},m=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),d=p(n),g=r,u=d["".concat(l,".").concat(g)]||d[g]||c[g]||i;return n?a.createElement(u,o(o({ref:t},m),{},{components:n})):a.createElement(u,o({ref:t},m))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},75858:function(e,t,n){n.r(t),n.d(t,{assets:function(){return m},contentTitle:function(){return l},default:function(){return g},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return c}});var a=n(87462),r=n(63366),i=(n(67294),n(3905)),o=["components"],s={id:"processTargets_modifiers_ItemStage_tokenizeRange",title:"Module: processTargets/modifiers/ItemStage/tokenizeRange",sidebar_label:"processTargets/modifiers/ItemStage/tokenizeRange",sidebar_position:0,custom_edit_url:null},l=void 0,p={unversionedId:"contributing/api/modules/processTargets_modifiers_ItemStage_tokenizeRange",id:"contributing/api/modules/processTargets_modifiers_ItemStage_tokenizeRange",title:"Module: processTargets/modifiers/ItemStage/tokenizeRange",description:"Namespaces",source:"@site/../docs/contributing/api/modules/processTargets_modifiers_ItemStage_tokenizeRange.md",sourceDirName:"contributing/api/modules",slug:"/contributing/api/modules/processTargets_modifiers_ItemStage_tokenizeRange",permalink:"/docs/contributing/api/modules/processTargets_modifiers_ItemStage_tokenizeRange",editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"processTargets_modifiers_ItemStage_tokenizeRange",title:"Module: processTargets/modifiers/ItemStage/tokenizeRange",sidebar_label:"processTargets/modifiers/ItemStage/tokenizeRange",sidebar_position:0,custom_edit_url:null},sidebar:"contributing",previous:{title:"processTargets/modifiers/ItemStage/getIterationScope",permalink:"/docs/contributing/api/modules/processTargets_modifiers_ItemStage_getIterationScope"},next:{title:"processTargets/modifiers/LeadingTrailingStages",permalink:"/docs/contributing/api/modules/processTargets_modifiers_LeadingTrailingStages"}},m={},c=[{value:"Namespaces",id:"namespaces",level:2},{value:"Functions",id:"functions",level:2},{value:"joinLexemesBySkippingMatchingPairs",id:"joinlexemesbyskippingmatchingpairs",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"tokenizeRange",id:"tokenizerange",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-1",level:4}],d={toc:c};function g(e){var t=e.components,n=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"namespaces"},"Namespaces"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/contributing/api/namespaces/processTargets_modifiers_ItemStage_tokenizeRange.internal"},"internal"))),(0,i.kt)("h2",{id:"functions"},"Functions"),(0,i.kt)("h3",{id:"joinlexemesbyskippingmatchingpairs"},"joinLexemesBySkippingMatchingPairs"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"joinLexemesBySkippingMatchingPairs"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"lexemes"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"string"),"[]"),(0,i.kt)("p",null,"Takes a list of lexemes and joins them into a list of alternating items and separators, skipping matching pairs (), {}, etc"),(0,i.kt)("h4",{id:"parameters"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"lexemes")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string"),"[]"),(0,i.kt)("td",{parentName:"tr",align:"left"},"List of lexemes to operate on")))),(0,i.kt)("h4",{id:"returns"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"string"),"[]"),(0,i.kt)("p",null,"List of merged lexemes.  Note that its length will be less than or equal to {@link lexemes}"),(0,i.kt)("h4",{id:"defined-in"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/cursorless-dev/cursorless/blob/f8a3fc3/src/processTargets/modifiers/ItemStage/tokenizeRange.ts#L99"},"src/processTargets/modifiers/ItemStage/tokenizeRange.ts:99")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"tokenizerange"},"tokenizeRange"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"tokenizeRange"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"editor"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"interior"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"boundary?"),"): ",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/interfaces/processTargets_modifiers_ItemStage_tokenizeRange.internal.Token"},(0,i.kt)("inlineCode",{parentName:"a"},"Token")),"[]"),(0,i.kt)("p",null,'Given the iteration scope, returns a list of "tokens" within that collection\nIn this context, we define a "token" to be either an item in the collection,\na delimiter or a separator.  For example, if {@link interior} is a range\ncontaining ',(0,i.kt)("inlineCode",{parentName:"p"},"foo(hello), bar, whatever"),", and {@link boundary} consists of\ntwo ranges containing ",(0,i.kt)("inlineCode",{parentName:"p"},"(")," and ",(0,i.kt)("inlineCode",{parentName:"p"},")"),", then we'd return the following:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'[\n  { range: "(", type: "boundary" },\n  { range: "foo(hello)", type: "item" },\n  { range: ",", type: "separator" },\n  { range: "bar", type: "item" },\n  { range: ",", type: "separator" },\n  { range: "whatever", type: "item" },\n  { range: ")", type: "boundary" },\n]\n')),(0,i.kt)("p",null,"Where each ",(0,i.kt)("inlineCode",{parentName:"p"},"range")," isn't actually a string, but a range whose text is the\ngiven string."),(0,i.kt)("h4",{id:"parameters-1"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"editor")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/contributing/api/interfaces/actions_BringMoveSwap.internal.TextEditor"},(0,i.kt)("inlineCode",{parentName:"a"},"TextEditor"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The editor containing the range")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"interior")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/contributing/api/classes/actions_BringMoveSwap.internal.Range"},(0,i.kt)("inlineCode",{parentName:"a"},"Range"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The range to look for tokens within")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"boundary?")),(0,i.kt)("td",{parentName:"tr",align:"left"},"[",(0,i.kt)("a",{parentName:"td",href:"/docs/contributing/api/classes/actions_BringMoveSwap.internal.Range"},(0,i.kt)("inlineCode",{parentName:"a"},"Range")),", ",(0,i.kt)("a",{parentName:"td",href:"/docs/contributing/api/classes/actions_BringMoveSwap.internal.Range"},(0,i.kt)("inlineCode",{parentName:"a"},"Range")),"]"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Optional boundaries for collections. [], {}")))),(0,i.kt)("h4",{id:"returns-1"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/api/interfaces/processTargets_modifiers_ItemStage_tokenizeRange.internal.Token"},(0,i.kt)("inlineCode",{parentName:"a"},"Token")),"[]"),(0,i.kt)("p",null,"List of tokens"),(0,i.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/cursorless-dev/cursorless/blob/f8a3fc3/src/processTargets/modifiers/ItemStage/tokenizeRange.ts#L29"},"src/processTargets/modifiers/ItemStage/tokenizeRange.ts:29")))}g.isMDXComponent=!0}}]);